// Code generated by protoc-gen-gotemplate. DO NOT EDIT.
{{$resourceName := .Service.Name | trimSuffix "Service"}}
{{- $resourceNamePlural := concat $resourceName "s" }}
{{- if (regexMatch "y$" $resourceName)}}
{{- $resourceNamePlural = concat ($resourceName | trimSuffix "y") "ies" }}
{{- end}}
package transport // import "powerssl.io/pkg/resource/generated/{{$resourceName | lower}}/transport"

import (
	"context"

	"github.com/go-kit/kit/log"
	grpctransport "github.com/go-kit/kit/transport/grpc"
	types "github.com/gogo/protobuf/types"

	apiv1 "powerssl.io/pkg/api/v1"
	"powerssl.io/pkg/resource/generated/{{$resourceName | lower}}/endpoint"
)

type grpcServer struct {
{{- range .Service.Method}}
	{{.Name | lowerCamelCase}} grpctransport.Handler
{{- end}}
}

func NewGRPCServer(endpoints endpoint.Endpoints, logger log.Logger) apiv1.{{$resourceName}}ServiceServer {
	options := []grpctransport.ServerOption{
		grpctransport.ServerErrorLogger(logger),
	}

	return &grpcServer{
{{- range .Service.Method}}
		{{.Name | lowerCamelCase}}: grpctransport.NewServer(
			endpoints.{{.Name}}Endpoint,
			decodeGRPC{{.Name}}Request,
			encodeGRPC{{.Name}}Response,
			options...,
		),
{{- end}}
	}
}

{{range .Service.Method}}
{{- if eq (.Name | concat) "Delete"}}
func (s *grpcServer) Delete(ctx context.Context, req *apiv1.Delete{{$resourceName}}Request) (*types.Empty, error) {
{{- else if eq (.Name | concat) "List"}}
func (s *grpcServer) List(ctx context.Context, req *apiv1.List{{$resourceNamePlural}}Request) (*apiv1.List{{$resourceNamePlural}}Response, error) {
{{- else}}
func (s *grpcServer) {{.Name}}(ctx context.Context, req *apiv1.{{.Name}}{{$resourceName}}Request) (*apiv1.{{$resourceName}}, error) {
{{- end}}
	_, rep, err := s.{{.Name | lowerCamelCase}}.ServeGRPC(ctx, req)
	if err != nil {
		return nil, err
	}
{{- if eq (.Name | concat) "Delete"}}
	return rep.(*types.Empty), nil
{{- else if eq (.Name | concat) "List"}}
	return rep.(*apiv1.List{{$resourceNamePlural}}Response), nil
{{- else}}
	return rep.(*apiv1.{{$resourceName}}), nil
{{- end}}
}
{{end -}}
