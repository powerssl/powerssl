// Code generated by protoc-gen-gotemplate. DO NOT EDIT.
{{$resourceName := .Service.Name | trimSuffix "Service"}}
{{- $resourceNamePlural := concat $resourceName "s" }}
{{- if (regexMatch "y$" $resourceName)}}
{{- $resourceNamePlural = concat ($resourceName | trimSuffix "y") "ies" }}
{{- end}}
package service

import (
	"context"

	"github.com/go-kit/kit/log"

	"powerssl.io/pkg/api"
)

type Service interface {
{{- range .Service.Method}}
{{- if eq (.Name | concat) "Create"}}
	{{.Name}}(ctx context.Context, {{$resourceName | lowerCamelCase}} *api.{{$resourceName}}) (*api.{{$resourceName}}, error)
{{- else if eq (.Name | concat) "Delete"}}
	{{.Name}}(ctx context.Context, name string) error
{{- else if eq (.Name | concat) "Get"}}
	{{.Name}}(ctx context.Context, name string) (*api.{{$resourceName}}, error)
{{- else if eq (.Name | concat) "List"}}
	{{.Name}}(ctx context.Context) ([]*api.{{$resourceName}}, error)
{{- else if eq (.Name | concat) "Update"}}
	{{.Name}}(ctx context.Context, {{$resourceName | lowerCamelCase}} *api.{{$resourceName}}) (*api.{{$resourceName}}, error)
{{- else}}
	{{.Name}}(ctx context.Context) error
{{- end}}
{{- end}}
}

func New(logger log.Logger) Service {
	var svc Service
	{
		svc = NewBasicService()
		svc = LoggingMiddleware(logger)(svc)
	}
	return svc
}

type basicService struct{}

func NewBasicService() Service {
	return basicService{}
}
{{- range .Service.Method}}

{{if eq (.Name | concat) "Create"}}
func (bs basicService) {{.Name}}(_ context.Context, {{$resourceName | lowerCamelCase}} *api.{{$resourceName}}) (*api.{{$resourceName}}, error) {
	return nil, nil
{{- else if eq (.Name | concat) "Delete"}}
func (bs basicService) {{.Name}}(_ context.Context, name string) error {
	return nil
{{- else if eq (.Name | concat) "Get"}}
func (bs basicService) {{.Name}}(_ context.Context, name string) (*api.{{$resourceName}}, error) {
	return nil, nil
{{- else if eq (.Name | concat) "List"}}
func (bs basicService) {{.Name}}(_ context.Context) ([]*api.{{$resourceName}}, error) {
	return nil, nil
{{- else if eq (.Name | concat) "Update"}}
func (bs basicService) {{.Name}}(_ context.Context, {{$resourceName | lowerCamelCase}} *api.{{$resourceName}}) (*api.{{$resourceName}}, error) {
	return nil, nil
{{- else}}
func (bs basicService) {{.Name}}(_ context.Context) error {
	return nil
{{- end}}
}
{{- end}}
