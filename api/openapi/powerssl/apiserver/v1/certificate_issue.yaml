openapi: 3.0.0
info:
  title: powerssl/apiserver/v1/certificate_issue.proto
  version: v1
tags:
  - name: CertificateIssueService
paths:
  /v1/{name}:
    get:
      summary: Gets a certificate. Returns NOT_FOUND if the certificate does not exist.
      operationId: CertificateIssueService_Get
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CertificateIssue'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: name
          in: path
          required: true
          example: certificates/*/issues/*
          schema:
            type: string
            pattern: ^certificates\/\w+\/issues\/\w+$
      tags:
        - CertificateIssueService
      security:
        - bearerAuth: []
    delete:
      summary: Deletes a certificate. Returns NOT_FOUND if the certificate does not exist.
      operationId: CertificateIssueService_Delete
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                properties: {}
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: name
          in: path
          required: true
          example: certificates/*/issues/*
          schema:
            type: string
            pattern: ^certificates\/\w+\/issues\/\w+$
      tags:
        - CertificateIssueService
      security:
        - bearerAuth: []
    put:
      summary: |-
        Updates a certificate. Returns INVALID_ARGUMENT if the name of the
        certificate is non-empty and does equal the previous name.
      operationId: CertificateIssueService_Update
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CertificateIssue'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: name
          in: path
          required: true
          example: certificates/*/issues/*
          schema:
            type: string
            pattern: ^certificates\/\w+\/issues\/\w+$
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpdateCertificateIssueRequest'
        required: true
      tags:
        - CertificateIssueService
      security:
        - bearerAuth: []
  /v1/{parent}/issues:
    get:
      summary: |-
        Lists certificates. The order is unspecified but deterministic. Newly
        created certificates will not necessarily be added to the end of this list.
      operationId: CertificateIssueService_List
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListCertificateIssuesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: parent
          in: path
          required: true
          example: certificates/*
          schema:
            type: string
            pattern: ^certificates\/\w+$
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          required: false
          schema:
            type: string
      tags:
        - CertificateIssueService
      security:
        - bearerAuth: []
    post:
      summary: Creates a certificate, and returns the new CertificateIssue.
      operationId: CertificateIssueService_Create
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CertificateIssue'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: parent
          in: path
          required: true
          example: certificates/*
          schema:
            type: string
            pattern: ^certificates\/\w+$
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CreateCertificateIssueRequest'
        required: true
      tags:
        - CertificateIssueService
      security:
        - bearerAuth: []
components:
  schemas:
    protobufAny:
      type: object
      properties:
        typeUrl:
          type: string
        value:
          type: string
          format: byte
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/protobufAny'
    v1CertificateIssue:
      type: object
      properties:
        name:
          type: string
          description: |-
            The resource name of the certificate issue.
            CertificateIssue names have the form
            `certificates/{certificate_id}/issues/{issue_id}`. The name is ignored when
            creating a certificate issue.
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        displayName:
          type: string
        title:
          type: string
        description:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        dnsnames:
          type: array
          items:
            type: string
        keyAlgorithm:
          type: string
        keySize:
          type: integer
          format: int32
        digestAlgorithm:
          type: string
      description: A CertificateIssue ...
    v1CreateCertificateIssueRequest:
      type: object
      properties:
        parent:
          type: string
        certificateIssue:
          $ref: '#/components/schemas/v1CertificateIssue'
    v1ListCertificateIssuesResponse:
      type: object
      properties:
        certificateIssues:
          type: array
          items:
            $ref: '#/components/schemas/v1CertificateIssue'
        nextPageToken:
          type: string
    v1UpdateCertificateIssueRequest:
      type: object
      properties:
        name:
          type: string
        updateMask:
          type: string
        certificateIssue:
          $ref: '#/components/schemas/v1CertificateIssue'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
