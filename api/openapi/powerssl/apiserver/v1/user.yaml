openapi: 3.0.0
info:
  title: powerssl/apiserver/v1/user.proto
  version: v1
tags:
  - name: UserService
paths:
  /v1/users:
    get:
      summary: |-
        Lists users. The order is unspecified but deterministic. Newly created
        users will not necessarily be added to the end of this list.
      operationId: UserService_List
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListUsersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: pageSize
          description: |-
            Requested page size. Server may return fewer users than requested.
            If unspecified, server will pick an appropriate default.
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageToken
          description: |-
            A token identifying a page of results the server should return.
            Typically, this is the value of
            [ListUsersResponse.next_page_token][powerssl.apiserver.v1.ListUsersResponse.next_page_token].
            returned from the previous call to `List` method.
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserService
      security:
        - bearerAuth: []
    post:
      summary: Creates a user, and returns the new User.
      operationId: UserService_Create
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1User'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CreateUserRequest'
        required: true
      tags:
        - UserService
      security:
        - bearerAuth: []
  /v1/{name}:
    get:
      summary: Gets a user. Returns NOT_FOUND if the user does not exist.
      operationId: UserService_Get
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1User'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: name
          description: The name of the user to retrieve.
          in: path
          required: true
          example: users/*
          schema:
            type: string
            pattern: ^users\/\w+$
      tags:
        - UserService
      security:
        - bearerAuth: []
    delete:
      summary: Deletes a user. Returns NOT_FOUND if the user does not exist.
      operationId: UserService_Delete
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                properties: {}
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: name
          description: The name of the user to delete.
          in: path
          required: true
          example: users/*
          schema:
            type: string
            pattern: ^users\/\w+$
      tags:
        - UserService
      security:
        - bearerAuth: []
    put:
      summary: |-
        Updates a user. Returns INVALID_ARGUMENT if the name of the user
        is non-empty and does equal the previous name.
      operationId: UserService_Update
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1User'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: name
          description: The name of the user to update.
          in: path
          required: true
          example: users/*
          schema:
            type: string
            pattern: ^users\/\w+$
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpdateUserRequest'
        required: true
      tags:
        - UserService
      security:
        - bearerAuth: []
components:
  schemas:
    protobufAny:
      type: object
      properties:
        typeUrl:
          type: string
        value:
          type: string
          format: byte
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/protobufAny'
    v1CreateUserRequest:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/v1User'
      description: Request message for UserService.Create.
    v1ListUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/v1User'
          description: The list of users.
        nextPageToken:
          type: string
          description: |-
            A token to retrieve next page of results.
            Pass this value in the
            [ListUsersRequest.page_token][powerssl.apiserver.v1.ListUsersRequest.page_token]
            field in the subsequent call to `List` method to retrieve the next
            page of results.
      description: Response message for UserService.List.
    v1UpdateUserRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the user to update.
        updateMask:
          type: string
          description: The field mask with paths to update.
        user:
          $ref: '#/components/schemas/v1User'
      description: Request message for UserService.Update.
    v1User:
      type: object
      properties:
        name:
          type: string
          description: |-
            The resource name of the user.
            User names have the form `users/{user_id}`.
            The name is ignored when creating a user.
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        displayName:
          type: string
        userName:
          type: string
      description: A User ...
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
