// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.3
// source: powerssl/controller/v1/workflow.proto

package api

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type WorkflowKind int32

const (
	WorkflowKind_WORKFLOW_KIND_UNSPECIFIED WorkflowKind = 0
	WorkflowKind_CREATE_ACME_ACCOUNT       WorkflowKind = 1
	WorkflowKind_REQUEST_ACME_CERTIFICATE  WorkflowKind = 2
)

// Enum value maps for WorkflowKind.
var (
	WorkflowKind_name = map[int32]string{
		0: "WORKFLOW_KIND_UNSPECIFIED",
		1: "CREATE_ACME_ACCOUNT",
		2: "REQUEST_ACME_CERTIFICATE",
	}
	WorkflowKind_value = map[string]int32{
		"WORKFLOW_KIND_UNSPECIFIED": 0,
		"CREATE_ACME_ACCOUNT":       1,
		"REQUEST_ACME_CERTIFICATE":  2,
	}
)

func (x WorkflowKind) Enum() *WorkflowKind {
	p := new(WorkflowKind)
	*p = x
	return p
}

func (x WorkflowKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkflowKind) Descriptor() protoreflect.EnumDescriptor {
	return file_powerssl_controller_v1_workflow_proto_enumTypes[0].Descriptor()
}

func (WorkflowKind) Type() protoreflect.EnumType {
	return &file_powerssl_controller_v1_workflow_proto_enumTypes[0]
}

func (x WorkflowKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkflowKind.Descriptor instead.
func (WorkflowKind) EnumDescriptor() ([]byte, []int) {
	return file_powerssl_controller_v1_workflow_proto_rawDescGZIP(), []int{0}
}

type CreateWorkflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workflow *Workflow `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
}

func (x *CreateWorkflowRequest) Reset() {
	*x = CreateWorkflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_powerssl_controller_v1_workflow_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkflowRequest) ProtoMessage() {}

func (x *CreateWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_powerssl_controller_v1_workflow_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkflowRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_powerssl_controller_v1_workflow_proto_rawDescGZIP(), []int{0}
}

func (x *CreateWorkflowRequest) GetWorkflow() *Workflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

type Workflow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string                        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Kind               WorkflowKind                  `protobuf:"varint,2,opt,name=kind,proto3,enum=powerssl.controller.v1.WorkflowKind" json:"kind,omitempty"`
	IntegrationFilters []*Workflow_IntegrationFilter `protobuf:"bytes,3,rep,name=integration_filters,json=integrationFilters,proto3" json:"integration_filters,omitempty"`
	// Types that are assignable to Input:
	//	*Workflow_CreateAcmeAccountInput
	//	*Workflow_RequestAcmeCertificateInput
	Input isWorkflow_Input `protobuf_oneof:"input"`
}

func (x *Workflow) Reset() {
	*x = Workflow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_powerssl_controller_v1_workflow_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workflow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workflow) ProtoMessage() {}

func (x *Workflow) ProtoReflect() protoreflect.Message {
	mi := &file_powerssl_controller_v1_workflow_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workflow.ProtoReflect.Descriptor instead.
func (*Workflow) Descriptor() ([]byte, []int) {
	return file_powerssl_controller_v1_workflow_proto_rawDescGZIP(), []int{1}
}

func (x *Workflow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Workflow) GetKind() WorkflowKind {
	if x != nil {
		return x.Kind
	}
	return WorkflowKind_WORKFLOW_KIND_UNSPECIFIED
}

func (x *Workflow) GetIntegrationFilters() []*Workflow_IntegrationFilter {
	if x != nil {
		return x.IntegrationFilters
	}
	return nil
}

func (m *Workflow) GetInput() isWorkflow_Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (x *Workflow) GetCreateAcmeAccountInput() *CreateACMEAccountInput {
	if x, ok := x.GetInput().(*Workflow_CreateAcmeAccountInput); ok {
		return x.CreateAcmeAccountInput
	}
	return nil
}

func (x *Workflow) GetRequestAcmeCertificateInput() *RequestACMECertificateInput {
	if x, ok := x.GetInput().(*Workflow_RequestAcmeCertificateInput); ok {
		return x.RequestAcmeCertificateInput
	}
	return nil
}

type isWorkflow_Input interface {
	isWorkflow_Input()
}

type Workflow_CreateAcmeAccountInput struct {
	CreateAcmeAccountInput *CreateACMEAccountInput `protobuf:"bytes,11,opt,name=create_acme_account_input,json=createAcmeAccountInput,proto3,oneof"`
}

type Workflow_RequestAcmeCertificateInput struct {
	RequestAcmeCertificateInput *RequestACMECertificateInput `protobuf:"bytes,12,opt,name=request_acme_certificate_input,json=requestAcmeCertificateInput,proto3,oneof"`
}

func (*Workflow_CreateAcmeAccountInput) isWorkflow_Input() {}

func (*Workflow_RequestAcmeCertificateInput) isWorkflow_Input() {}

type CreateACMEAccountInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account              string   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	DirectoryUrl         string   `protobuf:"bytes,2,opt,name=directory_url,json=directoryUrl,proto3" json:"directory_url,omitempty"`
	TermsOfServiceAgreed bool     `protobuf:"varint,3,opt,name=terms_of_service_agreed,json=termsOfServiceAgreed,proto3" json:"terms_of_service_agreed,omitempty"`
	Contacts             []string `protobuf:"bytes,4,rep,name=contacts,proto3" json:"contacts,omitempty"`
}

func (x *CreateACMEAccountInput) Reset() {
	*x = CreateACMEAccountInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_powerssl_controller_v1_workflow_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateACMEAccountInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateACMEAccountInput) ProtoMessage() {}

func (x *CreateACMEAccountInput) ProtoReflect() protoreflect.Message {
	mi := &file_powerssl_controller_v1_workflow_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateACMEAccountInput.ProtoReflect.Descriptor instead.
func (*CreateACMEAccountInput) Descriptor() ([]byte, []int) {
	return file_powerssl_controller_v1_workflow_proto_rawDescGZIP(), []int{2}
}

func (x *CreateACMEAccountInput) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CreateACMEAccountInput) GetDirectoryUrl() string {
	if x != nil {
		return x.DirectoryUrl
	}
	return ""
}

func (x *CreateACMEAccountInput) GetTermsOfServiceAgreed() bool {
	if x != nil {
		return x.TermsOfServiceAgreed
	}
	return false
}

func (x *CreateACMEAccountInput) GetContacts() []string {
	if x != nil {
		return x.Contacts
	}
	return nil
}

type RequestACMECertificateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirectoryUrl string   `protobuf:"bytes,1,opt,name=directory_url,json=directoryUrl,proto3" json:"directory_url,omitempty"`
	AccountUrl   string   `protobuf:"bytes,2,opt,name=account_url,json=accountUrl,proto3" json:"account_url,omitempty"`
	Dnsnames     []string `protobuf:"bytes,3,rep,name=dnsnames,proto3" json:"dnsnames,omitempty"`
	NotBefore    string   `protobuf:"bytes,4,opt,name=not_before,json=notBefore,proto3" json:"not_before,omitempty"`
	NotAfter     string   `protobuf:"bytes,5,opt,name=not_after,json=notAfter,proto3" json:"not_after,omitempty"`
}

func (x *RequestACMECertificateInput) Reset() {
	*x = RequestACMECertificateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_powerssl_controller_v1_workflow_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestACMECertificateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestACMECertificateInput) ProtoMessage() {}

func (x *RequestACMECertificateInput) ProtoReflect() protoreflect.Message {
	mi := &file_powerssl_controller_v1_workflow_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestACMECertificateInput.ProtoReflect.Descriptor instead.
func (*RequestACMECertificateInput) Descriptor() ([]byte, []int) {
	return file_powerssl_controller_v1_workflow_proto_rawDescGZIP(), []int{3}
}

func (x *RequestACMECertificateInput) GetDirectoryUrl() string {
	if x != nil {
		return x.DirectoryUrl
	}
	return ""
}

func (x *RequestACMECertificateInput) GetAccountUrl() string {
	if x != nil {
		return x.AccountUrl
	}
	return ""
}

func (x *RequestACMECertificateInput) GetDnsnames() []string {
	if x != nil {
		return x.Dnsnames
	}
	return nil
}

func (x *RequestACMECertificateInput) GetNotBefore() string {
	if x != nil {
		return x.NotBefore
	}
	return ""
}

func (x *RequestACMECertificateInput) GetNotAfter() string {
	if x != nil {
		return x.NotAfter
	}
	return ""
}

type Workflow_IntegrationFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind IntegrationKind `protobuf:"varint,1,opt,name=kind,proto3,enum=powerssl.controller.v1.IntegrationKind" json:"kind,omitempty"`
	Name string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Workflow_IntegrationFilter) Reset() {
	*x = Workflow_IntegrationFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_powerssl_controller_v1_workflow_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workflow_IntegrationFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workflow_IntegrationFilter) ProtoMessage() {}

func (x *Workflow_IntegrationFilter) ProtoReflect() protoreflect.Message {
	mi := &file_powerssl_controller_v1_workflow_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workflow_IntegrationFilter.ProtoReflect.Descriptor instead.
func (*Workflow_IntegrationFilter) Descriptor() ([]byte, []int) {
	return file_powerssl_controller_v1_workflow_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Workflow_IntegrationFilter) GetKind() IntegrationKind {
	if x != nil {
		return x.Kind
	}
	return IntegrationKind_INTEGRATION_KIND_UNSPECIFIED
}

func (x *Workflow_IntegrationFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_powerssl_controller_v1_workflow_proto protoreflect.FileDescriptor

var file_powerssl_controller_v1_workflow_proto_rawDesc = []byte{
	0x0a, 0x25, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x73, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x73,
	0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a,
	0x28, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x73, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x55, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x73, 0x6c, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x22, 0x95, 0x04, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x38, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x24, 0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x73, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x63, 0x0a, 0x13, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x73, 0x73, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x12, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x6b, 0x0a, 0x19, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x6d, 0x65, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x73, 0x6c, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x43, 0x4d, 0x45, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x16, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6d,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x7a, 0x0a,
	0x1e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x6d, 0x65, 0x5f, 0x63, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x73, 0x6c,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x43, 0x4d, 0x45, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x1b, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x64, 0x0a, 0x11, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3b,
	0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x73, 0x73, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x07, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x43, 0x4d, 0x45, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x55,
	0x72, 0x6c, 0x12, 0x35, 0x0a, 0x17, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x5f, 0x6f, 0x66, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x14, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x4f, 0x66, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x67, 0x72, 0x65, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x22, 0xbb, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x41, 0x43, 0x4d, 0x45, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x6e, 0x73, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x6e, 0x73, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x5f, 0x62,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x74,
	0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x5f, 0x61, 0x66,
	0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x2a, 0x64, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4b,
	0x69, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x19, 0x57, 0x4f, 0x52, 0x4b, 0x46, 0x4c, 0x4f, 0x57, 0x5f,
	0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x4d,
	0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x41, 0x43, 0x4d, 0x45, 0x5f, 0x43, 0x45, 0x52, 0x54,
	0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x10, 0x02, 0x32, 0x6e, 0x0a, 0x0f, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x73,
	0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x73, 0x6c,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x22, 0x00, 0x42, 0x24, 0x5a, 0x22, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x73, 0x73, 0x6c, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_powerssl_controller_v1_workflow_proto_rawDescOnce sync.Once
	file_powerssl_controller_v1_workflow_proto_rawDescData = file_powerssl_controller_v1_workflow_proto_rawDesc
)

func file_powerssl_controller_v1_workflow_proto_rawDescGZIP() []byte {
	file_powerssl_controller_v1_workflow_proto_rawDescOnce.Do(func() {
		file_powerssl_controller_v1_workflow_proto_rawDescData = protoimpl.X.CompressGZIP(file_powerssl_controller_v1_workflow_proto_rawDescData)
	})
	return file_powerssl_controller_v1_workflow_proto_rawDescData
}

var file_powerssl_controller_v1_workflow_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_powerssl_controller_v1_workflow_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_powerssl_controller_v1_workflow_proto_goTypes = []interface{}{
	(WorkflowKind)(0),                   // 0: powerssl.controller.v1.WorkflowKind
	(*CreateWorkflowRequest)(nil),       // 1: powerssl.controller.v1.CreateWorkflowRequest
	(*Workflow)(nil),                    // 2: powerssl.controller.v1.Workflow
	(*CreateACMEAccountInput)(nil),      // 3: powerssl.controller.v1.CreateACMEAccountInput
	(*RequestACMECertificateInput)(nil), // 4: powerssl.controller.v1.RequestACMECertificateInput
	(*Workflow_IntegrationFilter)(nil),  // 5: powerssl.controller.v1.Workflow.IntegrationFilter
	(IntegrationKind)(0),                // 6: powerssl.controller.v1.IntegrationKind
}
var file_powerssl_controller_v1_workflow_proto_depIdxs = []int32{
	2, // 0: powerssl.controller.v1.CreateWorkflowRequest.workflow:type_name -> powerssl.controller.v1.Workflow
	0, // 1: powerssl.controller.v1.Workflow.kind:type_name -> powerssl.controller.v1.WorkflowKind
	5, // 2: powerssl.controller.v1.Workflow.integration_filters:type_name -> powerssl.controller.v1.Workflow.IntegrationFilter
	3, // 3: powerssl.controller.v1.Workflow.create_acme_account_input:type_name -> powerssl.controller.v1.CreateACMEAccountInput
	4, // 4: powerssl.controller.v1.Workflow.request_acme_certificate_input:type_name -> powerssl.controller.v1.RequestACMECertificateInput
	6, // 5: powerssl.controller.v1.Workflow.IntegrationFilter.kind:type_name -> powerssl.controller.v1.IntegrationKind
	1, // 6: powerssl.controller.v1.WorkflowService.Create:input_type -> powerssl.controller.v1.CreateWorkflowRequest
	2, // 7: powerssl.controller.v1.WorkflowService.Create:output_type -> powerssl.controller.v1.Workflow
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_powerssl_controller_v1_workflow_proto_init() }
func file_powerssl_controller_v1_workflow_proto_init() {
	if File_powerssl_controller_v1_workflow_proto != nil {
		return
	}
	file_powerssl_controller_v1_integration_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_powerssl_controller_v1_workflow_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_powerssl_controller_v1_workflow_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Workflow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_powerssl_controller_v1_workflow_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateACMEAccountInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_powerssl_controller_v1_workflow_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestACMECertificateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_powerssl_controller_v1_workflow_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Workflow_IntegrationFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_powerssl_controller_v1_workflow_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Workflow_CreateAcmeAccountInput)(nil),
		(*Workflow_RequestAcmeCertificateInput)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_powerssl_controller_v1_workflow_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_powerssl_controller_v1_workflow_proto_goTypes,
		DependencyIndexes: file_powerssl_controller_v1_workflow_proto_depIdxs,
		EnumInfos:         file_powerssl_controller_v1_workflow_proto_enumTypes,
		MessageInfos:      file_powerssl_controller_v1_workflow_proto_msgTypes,
	}.Build()
	File_powerssl_controller_v1_workflow_proto = out.File
	file_powerssl_controller_v1_workflow_proto_rawDesc = nil
	file_powerssl_controller_v1_workflow_proto_goTypes = nil
	file_powerssl_controller_v1_workflow_proto_depIdxs = nil
}
