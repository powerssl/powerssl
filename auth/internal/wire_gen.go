// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package internal

import (
	"context"
	"powerssl.dev/auth/internal/oauth2"
	"powerssl.dev/auth/internal/server"
	"powerssl.dev/common/interrupthandler"
	"powerssl.dev/common/log"
	"powerssl.dev/common/metrics"
)

// Injectors from wire.go:

func Initialize(ctx context.Context, cfg *Config) ([]func() error, func(), error) {
	sugaredLogger, cleanup, err := log.ProvideLogger()
	if err != nil {
		return nil, nil, err
	}
	f := interrupthandler.Provide(ctx, sugaredLogger)
	config := &cfg.Metrics
	metricsF := metrics.Provide(ctx, config, sugaredLogger)
	serverConfig := &cfg.Server
	oauth2Config := &cfg.OAuth2
	oAuth2 := oauth2.New(oauth2Config)
	serverF := server.Provide(ctx, serverConfig, sugaredLogger, oAuth2)
	v := provideRunnerF(f, metricsF, serverF)
	return v, func() {
		cleanup()
	}, nil
}
