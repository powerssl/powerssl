// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package internal

import (
	"context"
	"powerssl.dev/backend/grpcserver"
	"powerssl.dev/backend/temporal/client"
	"powerssl.dev/backend/vault"
	"powerssl.dev/common/interrupthandler"
	"powerssl.dev/common/log"
	"powerssl.dev/common/telemetry"
	"powerssl.dev/controller/internal/service"
	"powerssl.dev/controller/internal/service/acme"
	"powerssl.dev/controller/internal/service/integration"
	"powerssl.dev/controller/internal/worker"
	"powerssl.dev/sdk/apiserver"
)

// Injectors from wire.go:

func Initialize(ctx context.Context, cfg *Config) ([]func() error, func(), error) {
	config := cfg.Log
	logger, cleanup, err := log.Provide(config)
	if err != nil {
		return nil, nil, err
	}
	f := interrupthandler.Provide(ctx, logger)
	grpcserverConfig := cfg.Server
	clientConfig := cfg.TemporalClient
	clientClient, err := client.Provide(clientConfig, logger)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	acmeService := acme.New(logger, clientClient)
	integrationService := integration.New(ctx, logger)
	register := service.Provide(acmeService, integrationService)
	grpcserverF, err := grpcserver.Provide(ctx, grpcserverConfig, logger, register)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	telemetryConfig := cfg.Telemetry
	telemeter, cleanup2, err := telemetry.Provide(ctx, telemetryConfig, logger)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	telemetryF := telemetry.ProvideF(ctx, telemeter)
	apiserverConfig := cfg.APIServerClient
	apiserverClient, err := apiserver.NewClient(ctx, apiserverConfig, logger, telemeter)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	vaultConfig := cfg.VaultClient
	vaultClient, err := vault.New(vaultConfig)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	workerF := worker.Provide(ctx, apiserverClient, vaultClient, clientClient)
	v := Provide(f, grpcserverF, telemetryF, workerF)
	return v, func() {
		cleanup2()
		cleanup()
	}, nil
}
