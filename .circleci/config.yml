version: 2.1
references:
  attach_workspace: &attach_workspace
    attach_workspace:
      at: .
  go_modules_cache_key: &go_modules_cache_key
    go-mod-{{ .Environment.CACHE_VERSION }}-{{ checksum "go.sum" }}
  restore_go_modules: &restore_go_modules
    restore_cache:
      key: *go_modules_cache_key
      name: "Restoring go modules Cache"
  save_go_modules: &save_go_modules
    save_cache:
      key: *go_modules_cache_key
      name: "Saving go modules Cache"
      paths:
        - /go/pkg/mod
  test_stage: &test_stage
      - verify_generated
      - shellcheck/check
      - test
      - vet
orbs:
  docker-publish: circleci/docker-publish@0.1.7
  shellcheck: circleci/shellcheck@1.3.10
commands:
  build_component:
    description: "Build component"
    parameters:
      component:
        type: string
      image:
        default: false
        type: boolean
    steps:
      - checkout
      - when:
          condition: "<<parameters.image>>"
          steps:
            - *attach_workspace
            - run: "make image-<<parameters.component>>"
            - docker-publish/check
            - run: "make release-image-<<parameters.component>>"
      - unless:
          condition: "<<parameters.image>>"
          steps:
            - *restore_go_modules
            - run: "make build-<<parameters.component>>"
            - persist_to_workspace:
                root: .
                paths:
                  - bin
            - store_artifacts:
                destination: bin
                path: bin
executors:
  golang-executor:
    docker:
      - image: circleci/golang:1.12
jobs:
  build_powerctl:
    executor: golang-executor
    steps:
      - build_component:
          component: powerctl
  build_powerctl_image:
    machine: true
    steps:
      - build_component:
          component: powerctl
          image: true
  build_powerssl_agent:
    executor: golang-executor
    steps:
      - build_component:
          component: powerssl-agent
  build_powerssl_agent_image:
    machine: true
    steps:
      - build_component:
          component: powerssl-agent
          image: true
  build_powerssl_apiserver:
    executor: golang-executor
    steps:
      - build_component:
          component: powerssl-apiserver
  build_powerssl_apiserver_image:
    machine: true
    steps:
      - build_component:
          component: powerssl-apiserver
          image: true
  build_powerssl_auth:
    executor: golang-executor
    steps:
      - build_component:
          component: powerssl-auth
  build_powerssl_auth_image:
    machine: true
    steps:
      - build_component:
          component: powerssl-auth
          image: true
  build_powerssl_controller:
    executor: golang-executor
    steps:
      - build_component:
          component: powerssl-controller
  build_powerssl_controller_image:
    machine: true
    steps:
      - build_component:
          component: powerssl-controller
          image: true
  build_powerssl_integration_acme:
    executor: golang-executor
    steps:
      - build_component:
          component: powerssl-integration-acme
  build_powerssl_integration_acme_image:
    machine: true
    steps:
      - build_component:
          component: powerssl-integration-acme
          image: true
  build_powerssl_integration_cloudflare:
    executor: golang-executor
    steps:
      - build_component:
          component: powerssl-integration-cloudflare
  build_powerssl_integration_cloudflare_image:
    machine: true
    steps:
      - build_component:
          component: powerssl-integration-cloudflare
          image: true
  build_powerssl_signer:
    executor: golang-executor
    steps:
      - build_component:
          component: powerssl-signer
  build_powerssl_signer_image:
    machine: true
    steps:
      - build_component:
          component: powerssl-signer
          image: true
  build_powerssl_webapp:
    executor: golang-executor
    steps:
      - build_component:
          component: powerssl-webapp
  build_powerssl_webapp_image:
    machine: true
    steps:
      - build_component:
          component: powerssl-webapp
          image: true
  build_powerutil:
    executor: golang-executor
    steps:
      - build_component:
          component: powerutil
  build_powerutil_image:
    machine: true
    steps:
      - build_component:
          component: powerutil
          image: true
  download_dependencies:
    executor: golang-executor
    steps:
      - checkout
      - *restore_go_modules
      - run: go mod download
      - *save_go_modules
  verify_generated:
    executor: golang-executor
    steps:
      - checkout
      - *restore_go_modules
      - run: sudo apt install clang-format protobuf-compiler
      - run: make generate
      - run: git diff --exit-code
  test:
    executor: golang-executor
    steps:
      - checkout
      - *restore_go_modules
      - run: make test
  vet:
    executor: golang-executor
    steps:
      - checkout
      - *restore_go_modules
      - run: make vet
workflows:
  version: 2
  commit:
    jobs:
      - download_dependencies
      - verify_generated:
          requires:
            - download_dependencies
      - test:
          requires:
            - download_dependencies
      - vet:
          requires:
            - download_dependencies
      - shellcheck/check:
          path: scripts
      - build_powerctl:
          requires: *test_stage
      - build_powerctl_image:
          filters:
            branches:
              only: master
          requires:
            - build_powerctl
      - build_powerssl_agent:
          requires: *test_stage
      - build_powerssl_agent_image:
          filters:
            branches:
              only: master
          requires:
            - build_powerssl_agent
      - build_powerssl_apiserver:
          requires: *test_stage
      - build_powerssl_apiserver_image:
          filters:
            branches:
              only: master
          requires:
            - build_powerssl_apiserver
      - build_powerssl_auth:
          requires: *test_stage
      - build_powerssl_auth_image:
          filters:
            branches:
              only: master
          requires:
            - build_powerssl_auth
      - build_powerssl_controller:
          requires: *test_stage
      - build_powerssl_controller_image:
          filters:
            branches:
              only: master
          requires:
            - build_powerssl_controller
      - build_powerssl_integration_acme:
          requires: *test_stage
      - build_powerssl_integration_acme_image:
          filters:
            branches:
              only: master
          requires:
            - build_powerssl_integration_acme
      - build_powerssl_integration_cloudflare:
          requires: *test_stage
      - build_powerssl_integration_cloudflare_image:
          filters:
            branches:
              only: master
          requires:
            - build_powerssl_integration_cloudflare
      - build_powerssl_signer:
          requires: *test_stage
      - build_powerssl_signer_image:
          filters:
            branches:
              only: master
          requires:
            - build_powerssl_signer
      - build_powerssl_webapp:
          requires: *test_stage
      - build_powerssl_webapp_image:
          filters:
            branches:
              only: master
          requires:
            - build_powerssl_webapp
      - build_powerutil:
          requires: *test_stage
      - build_powerutil_image:
          filters:
            branches:
              only: master
          requires:
            - build_powerutil
