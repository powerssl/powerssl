// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package internal

import (
	"context"
	"powerssl.dev/common/interrupthandler"
	"powerssl.dev/common/log"
	"powerssl.dev/common/metrics"
	"powerssl.dev/common/transport"
	"powerssl.dev/grpcgateway/internal/server"
)

// Injectors from wire.go:

func Initialize(ctx context.Context, cfg *Config) ([]func() error, func(), error) {
	config := cfg.Log
	sugaredLogger, cleanup, err := log.Provide(config)
	if err != nil {
		return nil, nil, err
	}
	f := interrupthandler.Provide(ctx, sugaredLogger)
	metricsConfig := cfg.Metrics
	metricsF := metrics.Provide(ctx, metricsConfig, sugaredLogger)
	serverConfig := cfg.Server
	clientConfig := cfg.APIServerClient
	clientConn, err := transport.New(ctx, clientConfig)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	serverF := server.Provide(ctx, serverConfig, sugaredLogger, clientConn)
	v := Provide(f, metricsF, serverF)
	return v, func() {
		cleanup()
	}, nil
}
