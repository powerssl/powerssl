// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: controller/api/v1/ca.proto

package api // import "powerssl.io/pkg/controller/api/v1"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import types "github.com/gogo/protobuf/types"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type ChallengeType int32

const (
	ChallengeType_TYPE_UNSPECIFIED ChallengeType = 0
	ChallengeType_DNS_01           ChallengeType = 1
	ChallengeType_HTTP_01          ChallengeType = 2
	ChallengeType_TLS_SNI_01       ChallengeType = 3
)

var ChallengeType_name = map[int32]string{
	0: "TYPE_UNSPECIFIED",
	1: "DNS_01",
	2: "HTTP_01",
	3: "TLS_SNI_01",
}
var ChallengeType_value = map[string]int32{
	"TYPE_UNSPECIFIED": 0,
	"DNS_01":           1,
	"HTTP_01":          2,
	"TLS_SNI_01":       3,
}

func (x ChallengeType) String() string {
	return proto.EnumName(ChallengeType_name, int32(x))
}
func (ChallengeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ca_e274e8cd6cb3dbae, []int{0}
}

type Challenge struct {
	Type                 ChallengeType     `protobuf:"varint,1,opt,name=type,proto3,enum=powerssl.controller.v1.ChallengeType" json:"type,omitempty"`
	Details              map[string]string `protobuf:"bytes,2,rep,name=details" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Challenge) Reset()         { *m = Challenge{} }
func (m *Challenge) String() string { return proto.CompactTextString(m) }
func (*Challenge) ProtoMessage()    {}
func (*Challenge) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca_e274e8cd6cb3dbae, []int{0}
}
func (m *Challenge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Challenge.Unmarshal(m, b)
}
func (m *Challenge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Challenge.Marshal(b, m, deterministic)
}
func (dst *Challenge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Challenge.Merge(dst, src)
}
func (m *Challenge) XXX_Size() int {
	return xxx_messageInfo_Challenge.Size(m)
}
func (m *Challenge) XXX_DiscardUnknown() {
	xxx_messageInfo_Challenge.DiscardUnknown(m)
}

var xxx_messageInfo_Challenge proto.InternalMessageInfo

func (m *Challenge) GetType() ChallengeType {
	if m != nil {
		return m.Type
	}
	return ChallengeType_TYPE_UNSPECIFIED
}

func (m *Challenge) GetDetails() map[string]string {
	if m != nil {
		return m.Details
	}
	return nil
}

type GetAuthorizeDomainRequestResponse struct {
	Activity             *Activity `protobuf:"bytes,1,opt,name=activity" json:"activity,omitempty"`
	Domain               string    `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetAuthorizeDomainRequestResponse) Reset()         { *m = GetAuthorizeDomainRequestResponse{} }
func (m *GetAuthorizeDomainRequestResponse) String() string { return proto.CompactTextString(m) }
func (*GetAuthorizeDomainRequestResponse) ProtoMessage()    {}
func (*GetAuthorizeDomainRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca_e274e8cd6cb3dbae, []int{1}
}
func (m *GetAuthorizeDomainRequestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAuthorizeDomainRequestResponse.Unmarshal(m, b)
}
func (m *GetAuthorizeDomainRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAuthorizeDomainRequestResponse.Marshal(b, m, deterministic)
}
func (dst *GetAuthorizeDomainRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuthorizeDomainRequestResponse.Merge(dst, src)
}
func (m *GetAuthorizeDomainRequestResponse) XXX_Size() int {
	return xxx_messageInfo_GetAuthorizeDomainRequestResponse.Size(m)
}
func (m *GetAuthorizeDomainRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuthorizeDomainRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuthorizeDomainRequestResponse proto.InternalMessageInfo

func (m *GetAuthorizeDomainRequestResponse) GetActivity() *Activity {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (m *GetAuthorizeDomainRequestResponse) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

type SetAuthorizeDomainResponseRequest struct {
	Activity             *Activity    `protobuf:"bytes,1,opt,name=activity" json:"activity,omitempty"`
	Error                *Error       `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Challenges           []*Challenge `protobuf:"bytes,3,rep,name=challenges" json:"challenges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SetAuthorizeDomainResponseRequest) Reset()         { *m = SetAuthorizeDomainResponseRequest{} }
func (m *SetAuthorizeDomainResponseRequest) String() string { return proto.CompactTextString(m) }
func (*SetAuthorizeDomainResponseRequest) ProtoMessage()    {}
func (*SetAuthorizeDomainResponseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca_e274e8cd6cb3dbae, []int{2}
}
func (m *SetAuthorizeDomainResponseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAuthorizeDomainResponseRequest.Unmarshal(m, b)
}
func (m *SetAuthorizeDomainResponseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAuthorizeDomainResponseRequest.Marshal(b, m, deterministic)
}
func (dst *SetAuthorizeDomainResponseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAuthorizeDomainResponseRequest.Merge(dst, src)
}
func (m *SetAuthorizeDomainResponseRequest) XXX_Size() int {
	return xxx_messageInfo_SetAuthorizeDomainResponseRequest.Size(m)
}
func (m *SetAuthorizeDomainResponseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAuthorizeDomainResponseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetAuthorizeDomainResponseRequest proto.InternalMessageInfo

func (m *SetAuthorizeDomainResponseRequest) GetActivity() *Activity {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (m *SetAuthorizeDomainResponseRequest) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *SetAuthorizeDomainResponseRequest) GetChallenges() []*Challenge {
	if m != nil {
		return m.Challenges
	}
	return nil
}

type GetRequestCertificateRequestResponse struct {
	Activity                  *Activity `protobuf:"bytes,1,opt,name=activity" json:"activity,omitempty"`
	CertificateSigningRequest string    `protobuf:"bytes,2,opt,name=certificate_signing_request,json=certificateSigningRequest,proto3" json:"certificate_signing_request,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}  `json:"-"`
	XXX_unrecognized          []byte    `json:"-"`
	XXX_sizecache             int32     `json:"-"`
}

func (m *GetRequestCertificateRequestResponse) Reset()         { *m = GetRequestCertificateRequestResponse{} }
func (m *GetRequestCertificateRequestResponse) String() string { return proto.CompactTextString(m) }
func (*GetRequestCertificateRequestResponse) ProtoMessage()    {}
func (*GetRequestCertificateRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca_e274e8cd6cb3dbae, []int{3}
}
func (m *GetRequestCertificateRequestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequestCertificateRequestResponse.Unmarshal(m, b)
}
func (m *GetRequestCertificateRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequestCertificateRequestResponse.Marshal(b, m, deterministic)
}
func (dst *GetRequestCertificateRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequestCertificateRequestResponse.Merge(dst, src)
}
func (m *GetRequestCertificateRequestResponse) XXX_Size() int {
	return xxx_messageInfo_GetRequestCertificateRequestResponse.Size(m)
}
func (m *GetRequestCertificateRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequestCertificateRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequestCertificateRequestResponse proto.InternalMessageInfo

func (m *GetRequestCertificateRequestResponse) GetActivity() *Activity {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (m *GetRequestCertificateRequestResponse) GetCertificateSigningRequest() string {
	if m != nil {
		return m.CertificateSigningRequest
	}
	return ""
}

type SetRequestCertificateResponseRequest struct {
	Activity             *Activity `protobuf:"bytes,1,opt,name=activity" json:"activity,omitempty"`
	Error                *Error    `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Certificate          string    `protobuf:"bytes,3,opt,name=certificate,proto3" json:"certificate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SetRequestCertificateResponseRequest) Reset()         { *m = SetRequestCertificateResponseRequest{} }
func (m *SetRequestCertificateResponseRequest) String() string { return proto.CompactTextString(m) }
func (*SetRequestCertificateResponseRequest) ProtoMessage()    {}
func (*SetRequestCertificateResponseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca_e274e8cd6cb3dbae, []int{4}
}
func (m *SetRequestCertificateResponseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRequestCertificateResponseRequest.Unmarshal(m, b)
}
func (m *SetRequestCertificateResponseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRequestCertificateResponseRequest.Marshal(b, m, deterministic)
}
func (dst *SetRequestCertificateResponseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRequestCertificateResponseRequest.Merge(dst, src)
}
func (m *SetRequestCertificateResponseRequest) XXX_Size() int {
	return xxx_messageInfo_SetRequestCertificateResponseRequest.Size(m)
}
func (m *SetRequestCertificateResponseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRequestCertificateResponseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetRequestCertificateResponseRequest proto.InternalMessageInfo

func (m *SetRequestCertificateResponseRequest) GetActivity() *Activity {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (m *SetRequestCertificateResponseRequest) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *SetRequestCertificateResponseRequest) GetCertificate() string {
	if m != nil {
		return m.Certificate
	}
	return ""
}

type GetRevokeCertificateRequestResponse struct {
	Activity             *Activity `protobuf:"bytes,1,opt,name=activity" json:"activity,omitempty"`
	Certificate          string    `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetRevokeCertificateRequestResponse) Reset()         { *m = GetRevokeCertificateRequestResponse{} }
func (m *GetRevokeCertificateRequestResponse) String() string { return proto.CompactTextString(m) }
func (*GetRevokeCertificateRequestResponse) ProtoMessage()    {}
func (*GetRevokeCertificateRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca_e274e8cd6cb3dbae, []int{5}
}
func (m *GetRevokeCertificateRequestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRevokeCertificateRequestResponse.Unmarshal(m, b)
}
func (m *GetRevokeCertificateRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRevokeCertificateRequestResponse.Marshal(b, m, deterministic)
}
func (dst *GetRevokeCertificateRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRevokeCertificateRequestResponse.Merge(dst, src)
}
func (m *GetRevokeCertificateRequestResponse) XXX_Size() int {
	return xxx_messageInfo_GetRevokeCertificateRequestResponse.Size(m)
}
func (m *GetRevokeCertificateRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRevokeCertificateRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRevokeCertificateRequestResponse proto.InternalMessageInfo

func (m *GetRevokeCertificateRequestResponse) GetActivity() *Activity {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (m *GetRevokeCertificateRequestResponse) GetCertificate() string {
	if m != nil {
		return m.Certificate
	}
	return ""
}

type SetRevokeCertificateResponseRequest struct {
	Activity             *Activity `protobuf:"bytes,1,opt,name=activity" json:"activity,omitempty"`
	Error                *Error    `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SetRevokeCertificateResponseRequest) Reset()         { *m = SetRevokeCertificateResponseRequest{} }
func (m *SetRevokeCertificateResponseRequest) String() string { return proto.CompactTextString(m) }
func (*SetRevokeCertificateResponseRequest) ProtoMessage()    {}
func (*SetRevokeCertificateResponseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca_e274e8cd6cb3dbae, []int{6}
}
func (m *SetRevokeCertificateResponseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRevokeCertificateResponseRequest.Unmarshal(m, b)
}
func (m *SetRevokeCertificateResponseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRevokeCertificateResponseRequest.Marshal(b, m, deterministic)
}
func (dst *SetRevokeCertificateResponseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRevokeCertificateResponseRequest.Merge(dst, src)
}
func (m *SetRevokeCertificateResponseRequest) XXX_Size() int {
	return xxx_messageInfo_SetRevokeCertificateResponseRequest.Size(m)
}
func (m *SetRevokeCertificateResponseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRevokeCertificateResponseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetRevokeCertificateResponseRequest proto.InternalMessageInfo

func (m *SetRevokeCertificateResponseRequest) GetActivity() *Activity {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (m *SetRevokeCertificateResponseRequest) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type GetVerifyDomainRequestResponse struct {
	Activity             *Activity     `protobuf:"bytes,1,opt,name=activity" json:"activity,omitempty"`
	Domain               string        `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	ChallengeType        ChallengeType `protobuf:"varint,3,opt,name=challenge_type,json=challengeType,proto3,enum=powerssl.controller.v1.ChallengeType" json:"challenge_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetVerifyDomainRequestResponse) Reset()         { *m = GetVerifyDomainRequestResponse{} }
func (m *GetVerifyDomainRequestResponse) String() string { return proto.CompactTextString(m) }
func (*GetVerifyDomainRequestResponse) ProtoMessage()    {}
func (*GetVerifyDomainRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca_e274e8cd6cb3dbae, []int{7}
}
func (m *GetVerifyDomainRequestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVerifyDomainRequestResponse.Unmarshal(m, b)
}
func (m *GetVerifyDomainRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVerifyDomainRequestResponse.Marshal(b, m, deterministic)
}
func (dst *GetVerifyDomainRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVerifyDomainRequestResponse.Merge(dst, src)
}
func (m *GetVerifyDomainRequestResponse) XXX_Size() int {
	return xxx_messageInfo_GetVerifyDomainRequestResponse.Size(m)
}
func (m *GetVerifyDomainRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVerifyDomainRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVerifyDomainRequestResponse proto.InternalMessageInfo

func (m *GetVerifyDomainRequestResponse) GetActivity() *Activity {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (m *GetVerifyDomainRequestResponse) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *GetVerifyDomainRequestResponse) GetChallengeType() ChallengeType {
	if m != nil {
		return m.ChallengeType
	}
	return ChallengeType_TYPE_UNSPECIFIED
}

type SetVerifyDomainResponseRequest struct {
	Activity             *Activity `protobuf:"bytes,1,opt,name=activity" json:"activity,omitempty"`
	Error                *Error    `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SetVerifyDomainResponseRequest) Reset()         { *m = SetVerifyDomainResponseRequest{} }
func (m *SetVerifyDomainResponseRequest) String() string { return proto.CompactTextString(m) }
func (*SetVerifyDomainResponseRequest) ProtoMessage()    {}
func (*SetVerifyDomainResponseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca_e274e8cd6cb3dbae, []int{8}
}
func (m *SetVerifyDomainResponseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetVerifyDomainResponseRequest.Unmarshal(m, b)
}
func (m *SetVerifyDomainResponseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetVerifyDomainResponseRequest.Marshal(b, m, deterministic)
}
func (dst *SetVerifyDomainResponseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetVerifyDomainResponseRequest.Merge(dst, src)
}
func (m *SetVerifyDomainResponseRequest) XXX_Size() int {
	return xxx_messageInfo_SetVerifyDomainResponseRequest.Size(m)
}
func (m *SetVerifyDomainResponseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetVerifyDomainResponseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetVerifyDomainResponseRequest proto.InternalMessageInfo

func (m *SetVerifyDomainResponseRequest) GetActivity() *Activity {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (m *SetVerifyDomainResponseRequest) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*Challenge)(nil), "powerssl.controller.v1.Challenge")
	proto.RegisterMapType((map[string]string)(nil), "powerssl.controller.v1.Challenge.DetailsEntry")
	proto.RegisterType((*GetAuthorizeDomainRequestResponse)(nil), "powerssl.controller.v1.GetAuthorizeDomainRequestResponse")
	proto.RegisterType((*SetAuthorizeDomainResponseRequest)(nil), "powerssl.controller.v1.SetAuthorizeDomainResponseRequest")
	proto.RegisterType((*GetRequestCertificateRequestResponse)(nil), "powerssl.controller.v1.GetRequestCertificateRequestResponse")
	proto.RegisterType((*SetRequestCertificateResponseRequest)(nil), "powerssl.controller.v1.SetRequestCertificateResponseRequest")
	proto.RegisterType((*GetRevokeCertificateRequestResponse)(nil), "powerssl.controller.v1.GetRevokeCertificateRequestResponse")
	proto.RegisterType((*SetRevokeCertificateResponseRequest)(nil), "powerssl.controller.v1.SetRevokeCertificateResponseRequest")
	proto.RegisterType((*GetVerifyDomainRequestResponse)(nil), "powerssl.controller.v1.GetVerifyDomainRequestResponse")
	proto.RegisterType((*SetVerifyDomainResponseRequest)(nil), "powerssl.controller.v1.SetVerifyDomainResponseRequest")
	proto.RegisterEnum("powerssl.controller.v1.ChallengeType", ChallengeType_name, ChallengeType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for CAService service

type CAServiceClient interface {
	GetAuthorizeDomainRequest(ctx context.Context, in *Activity, opts ...grpc.CallOption) (*GetAuthorizeDomainRequestResponse, error)
	SetAuthorizeDomainResponse(ctx context.Context, in *SetAuthorizeDomainResponseRequest, opts ...grpc.CallOption) (*types.Empty, error)
	GetRequestCertificateRequest(ctx context.Context, in *Activity, opts ...grpc.CallOption) (*GetRequestCertificateRequestResponse, error)
	SetRequestCertificateResponse(ctx context.Context, in *SetRequestCertificateResponseRequest, opts ...grpc.CallOption) (*types.Empty, error)
	GetRevokeCertificateRequest(ctx context.Context, in *Activity, opts ...grpc.CallOption) (*GetRevokeCertificateRequestResponse, error)
	SetRevokeCertificateResponse(ctx context.Context, in *SetRevokeCertificateResponseRequest, opts ...grpc.CallOption) (*types.Empty, error)
	GetVerifyDomainRequest(ctx context.Context, in *Activity, opts ...grpc.CallOption) (*GetVerifyDomainRequestResponse, error)
	SetVerifyDomainResponse(ctx context.Context, in *SetVerifyDomainResponseRequest, opts ...grpc.CallOption) (*types.Empty, error)
}

type cAServiceClient struct {
	cc *grpc.ClientConn
}

func NewCAServiceClient(cc *grpc.ClientConn) CAServiceClient {
	return &cAServiceClient{cc}
}

func (c *cAServiceClient) GetAuthorizeDomainRequest(ctx context.Context, in *Activity, opts ...grpc.CallOption) (*GetAuthorizeDomainRequestResponse, error) {
	out := new(GetAuthorizeDomainRequestResponse)
	err := c.cc.Invoke(ctx, "/powerssl.controller.v1.CAService/GetAuthorizeDomainRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cAServiceClient) SetAuthorizeDomainResponse(ctx context.Context, in *SetAuthorizeDomainResponseRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/powerssl.controller.v1.CAService/SetAuthorizeDomainResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cAServiceClient) GetRequestCertificateRequest(ctx context.Context, in *Activity, opts ...grpc.CallOption) (*GetRequestCertificateRequestResponse, error) {
	out := new(GetRequestCertificateRequestResponse)
	err := c.cc.Invoke(ctx, "/powerssl.controller.v1.CAService/GetRequestCertificateRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cAServiceClient) SetRequestCertificateResponse(ctx context.Context, in *SetRequestCertificateResponseRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/powerssl.controller.v1.CAService/SetRequestCertificateResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cAServiceClient) GetRevokeCertificateRequest(ctx context.Context, in *Activity, opts ...grpc.CallOption) (*GetRevokeCertificateRequestResponse, error) {
	out := new(GetRevokeCertificateRequestResponse)
	err := c.cc.Invoke(ctx, "/powerssl.controller.v1.CAService/GetRevokeCertificateRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cAServiceClient) SetRevokeCertificateResponse(ctx context.Context, in *SetRevokeCertificateResponseRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/powerssl.controller.v1.CAService/SetRevokeCertificateResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cAServiceClient) GetVerifyDomainRequest(ctx context.Context, in *Activity, opts ...grpc.CallOption) (*GetVerifyDomainRequestResponse, error) {
	out := new(GetVerifyDomainRequestResponse)
	err := c.cc.Invoke(ctx, "/powerssl.controller.v1.CAService/GetVerifyDomainRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cAServiceClient) SetVerifyDomainResponse(ctx context.Context, in *SetVerifyDomainResponseRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/powerssl.controller.v1.CAService/SetVerifyDomainResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CAService service

type CAServiceServer interface {
	GetAuthorizeDomainRequest(context.Context, *Activity) (*GetAuthorizeDomainRequestResponse, error)
	SetAuthorizeDomainResponse(context.Context, *SetAuthorizeDomainResponseRequest) (*types.Empty, error)
	GetRequestCertificateRequest(context.Context, *Activity) (*GetRequestCertificateRequestResponse, error)
	SetRequestCertificateResponse(context.Context, *SetRequestCertificateResponseRequest) (*types.Empty, error)
	GetRevokeCertificateRequest(context.Context, *Activity) (*GetRevokeCertificateRequestResponse, error)
	SetRevokeCertificateResponse(context.Context, *SetRevokeCertificateResponseRequest) (*types.Empty, error)
	GetVerifyDomainRequest(context.Context, *Activity) (*GetVerifyDomainRequestResponse, error)
	SetVerifyDomainResponse(context.Context, *SetVerifyDomainResponseRequest) (*types.Empty, error)
}

func RegisterCAServiceServer(s *grpc.Server, srv CAServiceServer) {
	s.RegisterService(&_CAService_serviceDesc, srv)
}

func _CAService_GetAuthorizeDomainRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Activity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CAServiceServer).GetAuthorizeDomainRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/powerssl.controller.v1.CAService/GetAuthorizeDomainRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CAServiceServer).GetAuthorizeDomainRequest(ctx, req.(*Activity))
	}
	return interceptor(ctx, in, info, handler)
}

func _CAService_SetAuthorizeDomainResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAuthorizeDomainResponseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CAServiceServer).SetAuthorizeDomainResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/powerssl.controller.v1.CAService/SetAuthorizeDomainResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CAServiceServer).SetAuthorizeDomainResponse(ctx, req.(*SetAuthorizeDomainResponseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CAService_GetRequestCertificateRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Activity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CAServiceServer).GetRequestCertificateRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/powerssl.controller.v1.CAService/GetRequestCertificateRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CAServiceServer).GetRequestCertificateRequest(ctx, req.(*Activity))
	}
	return interceptor(ctx, in, info, handler)
}

func _CAService_SetRequestCertificateResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRequestCertificateResponseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CAServiceServer).SetRequestCertificateResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/powerssl.controller.v1.CAService/SetRequestCertificateResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CAServiceServer).SetRequestCertificateResponse(ctx, req.(*SetRequestCertificateResponseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CAService_GetRevokeCertificateRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Activity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CAServiceServer).GetRevokeCertificateRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/powerssl.controller.v1.CAService/GetRevokeCertificateRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CAServiceServer).GetRevokeCertificateRequest(ctx, req.(*Activity))
	}
	return interceptor(ctx, in, info, handler)
}

func _CAService_SetRevokeCertificateResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRevokeCertificateResponseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CAServiceServer).SetRevokeCertificateResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/powerssl.controller.v1.CAService/SetRevokeCertificateResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CAServiceServer).SetRevokeCertificateResponse(ctx, req.(*SetRevokeCertificateResponseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CAService_GetVerifyDomainRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Activity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CAServiceServer).GetVerifyDomainRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/powerssl.controller.v1.CAService/GetVerifyDomainRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CAServiceServer).GetVerifyDomainRequest(ctx, req.(*Activity))
	}
	return interceptor(ctx, in, info, handler)
}

func _CAService_SetVerifyDomainResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetVerifyDomainResponseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CAServiceServer).SetVerifyDomainResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/powerssl.controller.v1.CAService/SetVerifyDomainResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CAServiceServer).SetVerifyDomainResponse(ctx, req.(*SetVerifyDomainResponseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CAService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "powerssl.controller.v1.CAService",
	HandlerType: (*CAServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAuthorizeDomainRequest",
			Handler:    _CAService_GetAuthorizeDomainRequest_Handler,
		},
		{
			MethodName: "SetAuthorizeDomainResponse",
			Handler:    _CAService_SetAuthorizeDomainResponse_Handler,
		},
		{
			MethodName: "GetRequestCertificateRequest",
			Handler:    _CAService_GetRequestCertificateRequest_Handler,
		},
		{
			MethodName: "SetRequestCertificateResponse",
			Handler:    _CAService_SetRequestCertificateResponse_Handler,
		},
		{
			MethodName: "GetRevokeCertificateRequest",
			Handler:    _CAService_GetRevokeCertificateRequest_Handler,
		},
		{
			MethodName: "SetRevokeCertificateResponse",
			Handler:    _CAService_SetRevokeCertificateResponse_Handler,
		},
		{
			MethodName: "GetVerifyDomainRequest",
			Handler:    _CAService_GetVerifyDomainRequest_Handler,
		},
		{
			MethodName: "SetVerifyDomainResponse",
			Handler:    _CAService_SetVerifyDomainResponse_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "controller/api/v1/ca.proto",
}

func init() { proto.RegisterFile("controller/api/v1/ca.proto", fileDescriptor_ca_e274e8cd6cb3dbae) }

var fileDescriptor_ca_e274e8cd6cb3dbae = []byte{
	// 712 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x96, 0xcb, 0x4e, 0xdb, 0x4c,
	0x14, 0xc7, 0xe3, 0xe4, 0x03, 0x3e, 0x4e, 0x0a, 0x8a, 0x46, 0x28, 0x0d, 0xe6, 0xa2, 0x60, 0x40,
	0x45, 0x5d, 0xd8, 0x25, 0x48, 0xa8, 0x5c, 0x54, 0x29, 0x4d, 0x52, 0x40, 0x42, 0x11, 0xb2, 0xd3,
	0x4a, 0xed, 0x26, 0x32, 0xe6, 0x10, 0x46, 0x31, 0xb6, 0xb1, 0x27, 0x41, 0x66, 0x51, 0x75, 0xd3,
	0x27, 0xe8, 0xa6, 0x0f, 0xd0, 0xb7, 0xe8, 0xb6, 0xcb, 0x2e, 0xba, 0xed, 0xdb, 0x54, 0xb1, 0x4d,
	0x48, 0x21, 0x1e, 0x53, 0xf5, 0x92, 0x5d, 0x8e, 0x73, 0x2e, 0xff, 0xff, 0x19, 0xf9, 0x37, 0x06,
	0xd1, 0xb0, 0x2d, 0xe6, 0xda, 0xa6, 0x89, 0xae, 0xa2, 0x3b, 0x54, 0xe9, 0xae, 0x2b, 0x86, 0x2e,
	0x3b, 0xae, 0xcd, 0x6c, 0x92, 0x77, 0xec, 0x4b, 0x74, 0x3d, 0xcf, 0x94, 0x6f, 0x92, 0xe4, 0xee,
	0xba, 0x38, 0xd7, 0xb2, 0xed, 0x96, 0x89, 0x4a, 0x90, 0x75, 0xdc, 0x39, 0x55, 0xf0, 0xdc, 0x61,
	0x7e, 0x58, 0x24, 0xce, 0xdf, 0x6d, 0x78, 0x8e, 0x2c, 0x6a, 0x29, 0x7d, 0x15, 0x60, 0xb2, 0x72,
	0xa6, 0x9b, 0x26, 0x5a, 0x2d, 0x24, 0x5b, 0xf0, 0x1f, 0xf3, 0x1d, 0x2c, 0x08, 0x45, 0x61, 0x6d,
	0xba, 0xb4, 0x2a, 0x0f, 0x9f, 0x27, 0xf7, 0x0b, 0x1a, 0xbe, 0x83, 0x6a, 0x50, 0x42, 0xf6, 0x61,
	0xe2, 0x04, 0x99, 0x4e, 0x4d, 0xaf, 0x90, 0x2e, 0x66, 0xd6, 0xb2, 0x25, 0x39, 0xb1, 0x5a, 0xae,
	0x86, 0x05, 0x35, 0x8b, 0xb9, 0xbe, 0x7a, 0x5d, 0x2e, 0x6e, 0xc3, 0x83, 0xc1, 0x3f, 0x48, 0x0e,
	0x32, 0x6d, 0xf4, 0x03, 0x4d, 0x93, 0x6a, 0xef, 0x27, 0x99, 0x81, 0xb1, 0xae, 0x6e, 0x76, 0xb0,
	0x90, 0x0e, 0x9e, 0x85, 0xc1, 0x76, 0xfa, 0xa9, 0x20, 0xf9, 0xb0, 0xb4, 0x87, 0xac, 0xdc, 0x61,
	0x67, 0xb6, 0x4b, 0xaf, 0xb0, 0x6a, 0x9f, 0xeb, 0xd4, 0x52, 0xf1, 0xa2, 0x83, 0x1e, 0x53, 0xd1,
	0x73, 0x6c, 0xcb, 0x43, 0xb2, 0x0b, 0xff, 0xeb, 0x06, 0xa3, 0x5d, 0xca, 0xc2, 0xae, 0xd9, 0x52,
	0x31, 0x4e, 0x6b, 0x39, 0xca, 0x53, 0xfb, 0x15, 0x24, 0x0f, 0xe3, 0x27, 0x41, 0xdb, 0x68, 0x7a,
	0x14, 0x49, 0xdf, 0x05, 0x58, 0xd2, 0x86, 0xcc, 0x0e, 0x87, 0x46, 0x1a, 0x7e, 0x73, 0xf6, 0x06,
	0x8c, 0xa1, 0xeb, 0xda, 0x6e, 0x30, 0x3a, 0x5b, 0x5a, 0x88, 0x2b, 0xad, 0xf5, 0x92, 0xd4, 0x30,
	0x97, 0x94, 0x01, 0x8c, 0xeb, 0x95, 0x7b, 0x85, 0x4c, 0x70, 0x38, 0x4b, 0x89, 0x87, 0xa3, 0x0e,
	0x14, 0x49, 0x9f, 0x04, 0x58, 0xd9, 0x43, 0x16, 0x99, 0xa8, 0xa0, 0xcb, 0xe8, 0x29, 0x35, 0x74,
	0x86, 0x7f, 0x76, 0xb5, 0xcf, 0x60, 0xce, 0xb8, 0xe9, 0xdd, 0xf4, 0x68, 0xcb, 0xa2, 0x56, 0xab,
	0xe9, 0x86, 0x43, 0xa2, 0x7d, 0xcf, 0x0e, 0xa4, 0x68, 0x61, 0x46, 0xa4, 0x42, 0xfa, 0x2c, 0xc0,
	0x8a, 0x36, 0x5c, 0xe6, 0xc8, 0x4f, 0xa1, 0x08, 0xd9, 0x01, 0xe1, 0x85, 0x4c, 0xe0, 0x65, 0xf0,
	0x91, 0xf4, 0x5e, 0x80, 0xe5, 0x60, 0xc9, 0x5d, 0xbb, 0x8d, 0x7f, 0x6d, 0xc7, 0xb7, 0x74, 0xa4,
	0xef, 0xea, 0xf8, 0x28, 0xc0, 0xb2, 0x36, 0x54, 0xc7, 0xa8, 0x97, 0x28, 0x7d, 0x11, 0x60, 0x71,
	0x0f, 0xd9, 0x2b, 0x74, 0xe9, 0xa9, 0xff, 0x0f, 0x5f, 0x6e, 0x72, 0x08, 0xd3, 0xfd, 0xd7, 0xa1,
	0x19, 0x20, 0x32, 0xf3, 0x2b, 0x88, 0x9c, 0x32, 0x06, 0x43, 0xe9, 0x83, 0x00, 0x8b, 0xda, 0x6d,
	0x1b, 0xa3, 0x5e, 0xee, 0xe3, 0x3a, 0x4c, 0xfd, 0xa4, 0x9a, 0xcc, 0x40, 0xae, 0xf1, 0xfa, 0xa8,
	0xd6, 0x7c, 0x59, 0xd7, 0x8e, 0x6a, 0x95, 0x83, 0x17, 0x07, 0xb5, 0x6a, 0x2e, 0x45, 0x00, 0xc6,
	0xab, 0x75, 0xad, 0xf9, 0x64, 0x3d, 0x27, 0x90, 0x2c, 0x4c, 0xec, 0x37, 0x1a, 0x47, 0xbd, 0x20,
	0x4d, 0xa6, 0x01, 0x1a, 0x87, 0x5a, 0x53, 0xab, 0x1f, 0xf4, 0xe2, 0x4c, 0xe9, 0xdb, 0x04, 0x4c,
	0x56, 0xca, 0x1a, 0xba, 0x5d, 0x6a, 0x20, 0xb9, 0x82, 0xd9, 0x58, 0x32, 0x93, 0x44, 0x6f, 0xe2,
	0x56, 0x5c, 0x46, 0x22, 0xee, 0xa5, 0x14, 0xb9, 0x00, 0x31, 0x9e, 0xcc, 0x24, 0xb6, 0x75, 0x22,
	0xcd, 0xc5, 0xbc, 0x1c, 0xde, 0xbc, 0xf2, 0xf5, 0xcd, 0x2b, 0xd7, 0x7a, 0x37, 0xaf, 0x94, 0x22,
	0xef, 0x04, 0x98, 0xe7, 0x11, 0xf3, 0x1e, 0x96, 0x77, 0x39, 0x96, 0x13, 0x49, 0x2c, 0xa5, 0xc8,
	0x25, 0x2c, 0x70, 0x61, 0x48, 0x76, 0x39, 0xc6, 0x13, 0x19, 0xca, 0xf1, 0xfe, 0x16, 0xe6, 0x38,
	0x1c, 0xbb, 0x87, 0xf3, 0x1d, 0xae, 0x73, 0x3e, 0x1e, 0xa5, 0x14, 0xe9, 0xc0, 0x3c, 0x8f, 0x5f,
	0x64, 0x87, 0xeb, 0x9b, 0x4f, 0x3d, 0x8e, 0x6d, 0x06, 0xf9, 0xe1, 0x6c, 0xba, 0x87, 0xe3, 0x4d,
	0x8e, 0x63, 0x0e, 0xed, 0xa4, 0x14, 0x69, 0xc3, 0xc3, 0x18, 0x94, 0x90, 0x4d, 0x8e, 0x4f, 0x0e,
	0x7b, 0xe2, 0x2d, 0x3e, 0x7f, 0xf4, 0x66, 0xb5, 0xdf, 0x92, 0xda, 0x8a, 0xd3, 0x6e, 0x29, 0x77,
	0xbe, 0x2e, 0x77, 0x74, 0x87, 0x1e, 0x8f, 0x07, 0xa5, 0x1b, 0x3f, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x0a, 0xa4, 0x1e, 0x0b, 0xce, 0x0a, 0x00, 0x00,
}
