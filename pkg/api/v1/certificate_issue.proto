syntax = "proto3";

package powerssl.api.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "api/v1/meta.proto";

option go_package = "powerssl.io/pkg/api/v1;api";

service CertificateIssueService {
  rpc Create(CreateCertificateIssueRequest)
      returns (CertificateIssue) {
    option (google.api.http) = {
      post: "/v1/certificate-issues"
      body: "certificate-issues"
    };
  }
  rpc Delete(DeleteCertificateIssueRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/{name=certificate-issues/*}"
    };
  }
  rpc Get(GetCertificateIssueRequest)
      returns (CertificateIssue) {
    option (google.api.http) = {
      get: "/v1/{name=certificate-issues/*}"
    };
  }
  rpc List(ListCertificateIssuesRequest)
      returns (ListCertificateIssuesResponse) {
    option (google.api.http) = {
      get: "/v1/certificate-issues"
    };
  }
  rpc Update(UpdateCertificateIssueRequest)
      returns (CertificateIssue) {
    option (google.api.http) = {
      put: "/v1/{name=certificate-issues/*}",
      body: "certificate-issues"
    };
  }
}

message CreateCertificateIssueRequest {
  CertificateIssue certificate_issue = 1;
}

message DeleteCertificateIssueRequest {
  string name = 1;
}

message GetCertificateIssueRequest {
  string name = 1;
}

message ListCertificateIssuesRequest {
}

message ListCertificateIssuesResponse {
  TypeMeta type_meta = 1;
  ListMeta list_meta = 2;

  repeated CertificateIssue certificate_issues = 3;
}

message UpdateCertificateIssueRequest {
  CertificateIssue certificate_issue = 1;
}

message CertificateIssue {
}
