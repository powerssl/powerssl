// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/v1/certificate_authority.proto

package api // import "powerssl.io/pkg/api/v1"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/googleapis/google/api"
import types "github.com/gogo/protobuf/types"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type CreateCertificateAuthorityRequest struct {
	CertificateAuthority *CertificateAuthority `protobuf:"bytes,1,opt,name=certificate_authority,json=certificateAuthority" json:"certificate_authority,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreateCertificateAuthorityRequest) Reset()         { *m = CreateCertificateAuthorityRequest{} }
func (m *CreateCertificateAuthorityRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCertificateAuthorityRequest) ProtoMessage()    {}
func (*CreateCertificateAuthorityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_certificate_authority_cc9d796a42156bc4, []int{0}
}
func (m *CreateCertificateAuthorityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCertificateAuthorityRequest.Unmarshal(m, b)
}
func (m *CreateCertificateAuthorityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCertificateAuthorityRequest.Marshal(b, m, deterministic)
}
func (dst *CreateCertificateAuthorityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCertificateAuthorityRequest.Merge(dst, src)
}
func (m *CreateCertificateAuthorityRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCertificateAuthorityRequest.Size(m)
}
func (m *CreateCertificateAuthorityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCertificateAuthorityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCertificateAuthorityRequest proto.InternalMessageInfo

func (m *CreateCertificateAuthorityRequest) GetCertificateAuthority() *CertificateAuthority {
	if m != nil {
		return m.CertificateAuthority
	}
	return nil
}

type DeleteCertificateAuthorityRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCertificateAuthorityRequest) Reset()         { *m = DeleteCertificateAuthorityRequest{} }
func (m *DeleteCertificateAuthorityRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCertificateAuthorityRequest) ProtoMessage()    {}
func (*DeleteCertificateAuthorityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_certificate_authority_cc9d796a42156bc4, []int{1}
}
func (m *DeleteCertificateAuthorityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCertificateAuthorityRequest.Unmarshal(m, b)
}
func (m *DeleteCertificateAuthorityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCertificateAuthorityRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteCertificateAuthorityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCertificateAuthorityRequest.Merge(dst, src)
}
func (m *DeleteCertificateAuthorityRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCertificateAuthorityRequest.Size(m)
}
func (m *DeleteCertificateAuthorityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCertificateAuthorityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCertificateAuthorityRequest proto.InternalMessageInfo

func (m *DeleteCertificateAuthorityRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetCertificateAuthorityRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCertificateAuthorityRequest) Reset()         { *m = GetCertificateAuthorityRequest{} }
func (m *GetCertificateAuthorityRequest) String() string { return proto.CompactTextString(m) }
func (*GetCertificateAuthorityRequest) ProtoMessage()    {}
func (*GetCertificateAuthorityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_certificate_authority_cc9d796a42156bc4, []int{2}
}
func (m *GetCertificateAuthorityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCertificateAuthorityRequest.Unmarshal(m, b)
}
func (m *GetCertificateAuthorityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCertificateAuthorityRequest.Marshal(b, m, deterministic)
}
func (dst *GetCertificateAuthorityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCertificateAuthorityRequest.Merge(dst, src)
}
func (m *GetCertificateAuthorityRequest) XXX_Size() int {
	return xxx_messageInfo_GetCertificateAuthorityRequest.Size(m)
}
func (m *GetCertificateAuthorityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCertificateAuthorityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCertificateAuthorityRequest proto.InternalMessageInfo

func (m *GetCertificateAuthorityRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListCertificateAuthoritiesRequest struct {
	PageSize             int32    `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCertificateAuthoritiesRequest) Reset()         { *m = ListCertificateAuthoritiesRequest{} }
func (m *ListCertificateAuthoritiesRequest) String() string { return proto.CompactTextString(m) }
func (*ListCertificateAuthoritiesRequest) ProtoMessage()    {}
func (*ListCertificateAuthoritiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_certificate_authority_cc9d796a42156bc4, []int{3}
}
func (m *ListCertificateAuthoritiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCertificateAuthoritiesRequest.Unmarshal(m, b)
}
func (m *ListCertificateAuthoritiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCertificateAuthoritiesRequest.Marshal(b, m, deterministic)
}
func (dst *ListCertificateAuthoritiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCertificateAuthoritiesRequest.Merge(dst, src)
}
func (m *ListCertificateAuthoritiesRequest) XXX_Size() int {
	return xxx_messageInfo_ListCertificateAuthoritiesRequest.Size(m)
}
func (m *ListCertificateAuthoritiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCertificateAuthoritiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCertificateAuthoritiesRequest proto.InternalMessageInfo

func (m *ListCertificateAuthoritiesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListCertificateAuthoritiesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListCertificateAuthoritiesResponse struct {
	NextPageToken        string                  `protobuf:"bytes,4,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TypeMeta             *TypeMeta               `protobuf:"bytes,1,opt,name=type_meta,json=typeMeta" json:"type_meta,omitempty"`
	ListMeta             *ListMeta               `protobuf:"bytes,2,opt,name=list_meta,json=listMeta" json:"list_meta,omitempty"`
	Items                []*CertificateAuthority `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ListCertificateAuthoritiesResponse) Reset()         { *m = ListCertificateAuthoritiesResponse{} }
func (m *ListCertificateAuthoritiesResponse) String() string { return proto.CompactTextString(m) }
func (*ListCertificateAuthoritiesResponse) ProtoMessage()    {}
func (*ListCertificateAuthoritiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_certificate_authority_cc9d796a42156bc4, []int{4}
}
func (m *ListCertificateAuthoritiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCertificateAuthoritiesResponse.Unmarshal(m, b)
}
func (m *ListCertificateAuthoritiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCertificateAuthoritiesResponse.Marshal(b, m, deterministic)
}
func (dst *ListCertificateAuthoritiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCertificateAuthoritiesResponse.Merge(dst, src)
}
func (m *ListCertificateAuthoritiesResponse) XXX_Size() int {
	return xxx_messageInfo_ListCertificateAuthoritiesResponse.Size(m)
}
func (m *ListCertificateAuthoritiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCertificateAuthoritiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCertificateAuthoritiesResponse proto.InternalMessageInfo

func (m *ListCertificateAuthoritiesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *ListCertificateAuthoritiesResponse) GetTypeMeta() *TypeMeta {
	if m != nil {
		return m.TypeMeta
	}
	return nil
}

func (m *ListCertificateAuthoritiesResponse) GetListMeta() *ListMeta {
	if m != nil {
		return m.ListMeta
	}
	return nil
}

func (m *ListCertificateAuthoritiesResponse) GetItems() []*CertificateAuthority {
	if m != nil {
		return m.Items
	}
	return nil
}

type UpdateCertificateAuthorityRequest struct {
	Name                 string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CertificateAuthority *CertificateAuthority `protobuf:"bytes,1,opt,name=certificate_authority,json=certificateAuthority" json:"certificate_authority,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateCertificateAuthorityRequest) Reset()         { *m = UpdateCertificateAuthorityRequest{} }
func (m *UpdateCertificateAuthorityRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCertificateAuthorityRequest) ProtoMessage()    {}
func (*UpdateCertificateAuthorityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_certificate_authority_cc9d796a42156bc4, []int{5}
}
func (m *UpdateCertificateAuthorityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCertificateAuthorityRequest.Unmarshal(m, b)
}
func (m *UpdateCertificateAuthorityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCertificateAuthorityRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateCertificateAuthorityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCertificateAuthorityRequest.Merge(dst, src)
}
func (m *UpdateCertificateAuthorityRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCertificateAuthorityRequest.Size(m)
}
func (m *UpdateCertificateAuthorityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCertificateAuthorityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCertificateAuthorityRequest proto.InternalMessageInfo

func (m *UpdateCertificateAuthorityRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateCertificateAuthorityRequest) GetCertificateAuthority() *CertificateAuthority {
	if m != nil {
		return m.CertificateAuthority
	}
	return nil
}

type CertificateAuthority struct {
	TypeMeta             *TypeMeta                 `protobuf:"bytes,1,opt,name=type_meta,json=typeMeta" json:"type_meta,omitempty"`
	ObjectMeta           *ObjectMeta               `protobuf:"bytes,2,opt,name=object_meta,json=objectMeta" json:"object_meta,omitempty"`
	Spec                 *CertificateAuthoritySpec `protobuf:"bytes,3,opt,name=spec" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CertificateAuthority) Reset()         { *m = CertificateAuthority{} }
func (m *CertificateAuthority) String() string { return proto.CompactTextString(m) }
func (*CertificateAuthority) ProtoMessage()    {}
func (*CertificateAuthority) Descriptor() ([]byte, []int) {
	return fileDescriptor_certificate_authority_cc9d796a42156bc4, []int{6}
}
func (m *CertificateAuthority) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertificateAuthority.Unmarshal(m, b)
}
func (m *CertificateAuthority) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertificateAuthority.Marshal(b, m, deterministic)
}
func (dst *CertificateAuthority) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertificateAuthority.Merge(dst, src)
}
func (m *CertificateAuthority) XXX_Size() int {
	return xxx_messageInfo_CertificateAuthority.Size(m)
}
func (m *CertificateAuthority) XXX_DiscardUnknown() {
	xxx_messageInfo_CertificateAuthority.DiscardUnknown(m)
}

var xxx_messageInfo_CertificateAuthority proto.InternalMessageInfo

func (m *CertificateAuthority) GetTypeMeta() *TypeMeta {
	if m != nil {
		return m.TypeMeta
	}
	return nil
}

func (m *CertificateAuthority) GetObjectMeta() *ObjectMeta {
	if m != nil {
		return m.ObjectMeta
	}
	return nil
}

func (m *CertificateAuthority) GetSpec() *CertificateAuthoritySpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type CertificateAuthoritySpec struct {
	Vendor               string   `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CertificateAuthoritySpec) Reset()         { *m = CertificateAuthoritySpec{} }
func (m *CertificateAuthoritySpec) String() string { return proto.CompactTextString(m) }
func (*CertificateAuthoritySpec) ProtoMessage()    {}
func (*CertificateAuthoritySpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_certificate_authority_cc9d796a42156bc4, []int{7}
}
func (m *CertificateAuthoritySpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertificateAuthoritySpec.Unmarshal(m, b)
}
func (m *CertificateAuthoritySpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertificateAuthoritySpec.Marshal(b, m, deterministic)
}
func (dst *CertificateAuthoritySpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertificateAuthoritySpec.Merge(dst, src)
}
func (m *CertificateAuthoritySpec) XXX_Size() int {
	return xxx_messageInfo_CertificateAuthoritySpec.Size(m)
}
func (m *CertificateAuthoritySpec) XXX_DiscardUnknown() {
	xxx_messageInfo_CertificateAuthoritySpec.DiscardUnknown(m)
}

var xxx_messageInfo_CertificateAuthoritySpec proto.InternalMessageInfo

func (m *CertificateAuthoritySpec) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateCertificateAuthorityRequest)(nil), "powerssl.api.v1.CreateCertificateAuthorityRequest")
	proto.RegisterType((*DeleteCertificateAuthorityRequest)(nil), "powerssl.api.v1.DeleteCertificateAuthorityRequest")
	proto.RegisterType((*GetCertificateAuthorityRequest)(nil), "powerssl.api.v1.GetCertificateAuthorityRequest")
	proto.RegisterType((*ListCertificateAuthoritiesRequest)(nil), "powerssl.api.v1.ListCertificateAuthoritiesRequest")
	proto.RegisterType((*ListCertificateAuthoritiesResponse)(nil), "powerssl.api.v1.ListCertificateAuthoritiesResponse")
	proto.RegisterType((*UpdateCertificateAuthorityRequest)(nil), "powerssl.api.v1.UpdateCertificateAuthorityRequest")
	proto.RegisterType((*CertificateAuthority)(nil), "powerssl.api.v1.CertificateAuthority")
	proto.RegisterType((*CertificateAuthoritySpec)(nil), "powerssl.api.v1.CertificateAuthoritySpec")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for CertificateAuthorityService service

type CertificateAuthorityServiceClient interface {
	Create(ctx context.Context, in *CreateCertificateAuthorityRequest, opts ...grpc.CallOption) (*CertificateAuthority, error)
	Delete(ctx context.Context, in *DeleteCertificateAuthorityRequest, opts ...grpc.CallOption) (*types.Empty, error)
	Get(ctx context.Context, in *GetCertificateAuthorityRequest, opts ...grpc.CallOption) (*CertificateAuthority, error)
	List(ctx context.Context, in *ListCertificateAuthoritiesRequest, opts ...grpc.CallOption) (*ListCertificateAuthoritiesResponse, error)
	Update(ctx context.Context, in *UpdateCertificateAuthorityRequest, opts ...grpc.CallOption) (*CertificateAuthority, error)
}

type certificateAuthorityServiceClient struct {
	cc *grpc.ClientConn
}

func NewCertificateAuthorityServiceClient(cc *grpc.ClientConn) CertificateAuthorityServiceClient {
	return &certificateAuthorityServiceClient{cc}
}

func (c *certificateAuthorityServiceClient) Create(ctx context.Context, in *CreateCertificateAuthorityRequest, opts ...grpc.CallOption) (*CertificateAuthority, error) {
	out := new(CertificateAuthority)
	err := c.cc.Invoke(ctx, "/powerssl.api.v1.CertificateAuthorityService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *certificateAuthorityServiceClient) Delete(ctx context.Context, in *DeleteCertificateAuthorityRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/powerssl.api.v1.CertificateAuthorityService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *certificateAuthorityServiceClient) Get(ctx context.Context, in *GetCertificateAuthorityRequest, opts ...grpc.CallOption) (*CertificateAuthority, error) {
	out := new(CertificateAuthority)
	err := c.cc.Invoke(ctx, "/powerssl.api.v1.CertificateAuthorityService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *certificateAuthorityServiceClient) List(ctx context.Context, in *ListCertificateAuthoritiesRequest, opts ...grpc.CallOption) (*ListCertificateAuthoritiesResponse, error) {
	out := new(ListCertificateAuthoritiesResponse)
	err := c.cc.Invoke(ctx, "/powerssl.api.v1.CertificateAuthorityService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *certificateAuthorityServiceClient) Update(ctx context.Context, in *UpdateCertificateAuthorityRequest, opts ...grpc.CallOption) (*CertificateAuthority, error) {
	out := new(CertificateAuthority)
	err := c.cc.Invoke(ctx, "/powerssl.api.v1.CertificateAuthorityService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CertificateAuthorityService service

type CertificateAuthorityServiceServer interface {
	Create(context.Context, *CreateCertificateAuthorityRequest) (*CertificateAuthority, error)
	Delete(context.Context, *DeleteCertificateAuthorityRequest) (*types.Empty, error)
	Get(context.Context, *GetCertificateAuthorityRequest) (*CertificateAuthority, error)
	List(context.Context, *ListCertificateAuthoritiesRequest) (*ListCertificateAuthoritiesResponse, error)
	Update(context.Context, *UpdateCertificateAuthorityRequest) (*CertificateAuthority, error)
}

func RegisterCertificateAuthorityServiceServer(s *grpc.Server, srv CertificateAuthorityServiceServer) {
	s.RegisterService(&_CertificateAuthorityService_serviceDesc, srv)
}

func _CertificateAuthorityService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCertificateAuthorityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CertificateAuthorityServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/powerssl.api.v1.CertificateAuthorityService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CertificateAuthorityServiceServer).Create(ctx, req.(*CreateCertificateAuthorityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CertificateAuthorityService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCertificateAuthorityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CertificateAuthorityServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/powerssl.api.v1.CertificateAuthorityService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CertificateAuthorityServiceServer).Delete(ctx, req.(*DeleteCertificateAuthorityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CertificateAuthorityService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCertificateAuthorityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CertificateAuthorityServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/powerssl.api.v1.CertificateAuthorityService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CertificateAuthorityServiceServer).Get(ctx, req.(*GetCertificateAuthorityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CertificateAuthorityService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCertificateAuthoritiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CertificateAuthorityServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/powerssl.api.v1.CertificateAuthorityService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CertificateAuthorityServiceServer).List(ctx, req.(*ListCertificateAuthoritiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CertificateAuthorityService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCertificateAuthorityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CertificateAuthorityServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/powerssl.api.v1.CertificateAuthorityService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CertificateAuthorityServiceServer).Update(ctx, req.(*UpdateCertificateAuthorityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CertificateAuthorityService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "powerssl.api.v1.CertificateAuthorityService",
	HandlerType: (*CertificateAuthorityServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _CertificateAuthorityService_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _CertificateAuthorityService_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _CertificateAuthorityService_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _CertificateAuthorityService_List_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _CertificateAuthorityService_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/v1/certificate_authority.proto",
}

func init() {
	proto.RegisterFile("api/v1/certificate_authority.proto", fileDescriptor_certificate_authority_cc9d796a42156bc4)
}

var fileDescriptor_certificate_authority_cc9d796a42156bc4 = []byte{
	// 625 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x95, 0xc1, 0x4f, 0x13, 0x4f,
	0x14, 0xc7, 0xb3, 0x6d, 0xd9, 0xc0, 0x23, 0xbf, 0x90, 0xdf, 0x04, 0x48, 0xdd, 0x82, 0xa1, 0xa3,
	0x12, 0x25, 0xba, 0x1b, 0x0a, 0xd1, 0x04, 0xe4, 0xa0, 0x68, 0xb8, 0x68, 0x34, 0x05, 0x2f, 0x5c,
	0x9a, 0x61, 0x79, 0xd4, 0x91, 0x76, 0x67, 0xdc, 0x19, 0xaa, 0xc5, 0x18, 0x13, 0xae, 0x1e, 0xe1,
	0xee, 0xd5, 0xff, 0xc5, 0xa3, 0xff, 0x82, 0xff, 0x84, 0x37, 0xb3, 0x33, 0x5b, 0x50, 0xba, 0x6d,
	0x17, 0x13, 0x6f, 0xb3, 0x6f, 0xdf, 0xf7, 0xcd, 0xa7, 0xef, 0xbd, 0xfd, 0x16, 0x28, 0x93, 0x3c,
	0xe8, 0x2c, 0x07, 0x21, 0xc6, 0x9a, 0x1f, 0xf0, 0x90, 0x69, 0x6c, 0xb0, 0x23, 0xfd, 0x5a, 0xc4,
	0x5c, 0x77, 0x7d, 0x19, 0x0b, 0x2d, 0xc8, 0x94, 0x14, 0xef, 0x30, 0x56, 0xaa, 0xe5, 0x33, 0xc9,
	0xfd, 0xce, 0xb2, 0x37, 0xd7, 0x14, 0xa2, 0xd9, 0xc2, 0x20, 0xd1, 0xb2, 0x28, 0x12, 0x9a, 0x69,
	0x2e, 0x22, 0x65, 0xd3, 0xbd, 0x4a, 0xfa, 0xd6, 0x3c, 0xed, 0x1d, 0x1d, 0x04, 0xd8, 0x96, 0xbd,
	0x5a, 0xde, 0xff, 0xe9, 0x7d, 0x6d, 0xd4, 0xcc, 0x86, 0xe8, 0x27, 0xa8, 0x6e, 0xc6, 0xc8, 0x34,
	0x6e, 0x5e, 0x30, 0x3c, 0xea, 0x21, 0xd4, 0xf1, 0xed, 0x11, 0x2a, 0x4d, 0x76, 0x61, 0x26, 0x13,
	0xb1, 0xec, 0x2c, 0x38, 0xb7, 0x27, 0x6b, 0xb7, 0xfc, 0x4b, 0x8c, 0x7e, 0x66, 0xb1, 0xe9, 0x30,
	0x23, 0x4a, 0x1f, 0x40, 0xf5, 0x09, 0xb6, 0x70, 0x38, 0x00, 0x81, 0x52, 0xc4, 0xda, 0x68, 0xee,
	0x9b, 0xa8, 0x9b, 0x33, 0x5d, 0x85, 0xeb, 0x5b, 0xa8, 0xaf, 0xaa, 0x6a, 0x40, 0xf5, 0x19, 0x57,
	0x59, 0x32, 0x8e, 0xaa, 0x27, 0xac, 0xc0, 0x84, 0x64, 0x4d, 0x6c, 0x28, 0x7e, 0x6c, 0xd5, 0x63,
	0xf5, 0xf1, 0x24, 0xb0, 0xcd, 0x8f, 0x91, 0xcc, 0x03, 0x98, 0x97, 0x5a, 0x1c, 0x62, 0x54, 0x2e,
	0x98, 0xda, 0x26, 0x7d, 0x27, 0x09, 0xd0, 0x9f, 0x0e, 0xd0, 0x61, 0x37, 0x28, 0x29, 0x22, 0x85,
	0x64, 0x11, 0xa6, 0x22, 0x7c, 0xaf, 0x1b, 0xbf, 0x95, 0x2a, 0x99, 0x52, 0xff, 0x25, 0xe1, 0x97,
	0xbd, 0x72, 0xe4, 0x3e, 0x4c, 0xe8, 0xae, 0xc4, 0x46, 0x32, 0xb2, 0xb4, 0xdd, 0xd7, 0xfa, 0xda,
	0xbd, 0xd3, 0x95, 0xf8, 0x1c, 0x35, 0xab, 0x8f, 0xeb, 0xf4, 0x94, 0xe8, 0x5a, 0x5c, 0x69, 0xab,
	0x2b, 0x0c, 0xd0, 0x25, 0x9c, 0x56, 0xd7, 0x4a, 0x4f, 0x64, 0x1d, 0xc6, 0xb8, 0xc6, 0xb6, 0x2a,
	0x17, 0x17, 0x8a, 0xf9, 0x47, 0x6b, 0x35, 0xf4, 0xd4, 0x81, 0xea, 0x2b, 0xb9, 0xcf, 0xf2, 0x0d,
	0xb3, 0x70, 0x31, 0x96, 0x7f, 0xba, 0x61, 0xdf, 0x1c, 0x98, 0xce, 0x4a, 0xff, 0xeb, 0xde, 0x3e,
	0x84, 0x49, 0xb1, 0xf7, 0x06, 0xc3, 0x3f, 0xba, 0x5b, 0xe9, 0x53, 0xbe, 0x30, 0x39, 0x46, 0x0b,
	0xe2, 0xfc, 0x4c, 0x36, 0xa0, 0xa4, 0x24, 0x86, 0xe5, 0xa2, 0x91, 0xdd, 0xc9, 0xf5, 0xcb, 0xb6,
	0x25, 0x86, 0x75, 0x23, 0xa3, 0x35, 0x28, 0x0f, 0xca, 0x20, 0xb3, 0xe0, 0x76, 0x30, 0xda, 0x17,
	0x71, 0xba, 0xf2, 0xe9, 0x53, 0xed, 0xcc, 0x85, 0x4a, 0xa6, 0x08, 0xe3, 0x0e, 0x0f, 0x91, 0x7c,
	0x71, 0xc0, 0xb5, 0x2e, 0x40, 0x6a, 0xfd, 0x3c, 0xa3, 0xec, 0xc1, 0xcb, 0x37, 0x1d, 0xba, 0x76,
	0xf2, 0xfd, 0xc7, 0x69, 0x61, 0x95, 0x56, 0x2e, 0x59, 0xde, 0x3d, 0x76, 0xf1, 0x7d, 0xac, 0xcd,
	0x64, 0xbd, 0xe8, 0x92, 0x13, 0x07, 0x5c, 0x6b, 0x13, 0x19, 0x84, 0x23, 0xfd, 0xc3, 0x9b, 0xf5,
	0xad, 0x2d, 0xfa, 0x3d, 0x5b, 0xf4, 0x9f, 0x26, 0xb6, 0x48, 0xef, 0x1a, 0xa4, 0xc5, 0xa5, 0x9b,
	0x09, 0xd2, 0x87, 0x64, 0x13, 0x37, 0x06, 0x80, 0x05, 0x4b, 0x1f, 0xc9, 0x67, 0x07, 0x8a, 0x5b,
	0xa8, 0x49, 0xd0, 0x47, 0x30, 0xdc, 0x88, 0xf2, 0x36, 0x28, 0xa5, 0x21, 0xf9, 0x68, 0xce, 0x1c,
	0x28, 0x25, 0x1f, 0x70, 0x46, 0x43, 0x46, 0x3a, 0x9c, 0xb7, 0x72, 0x25, 0x8d, 0xf5, 0x2c, 0x7a,
	0xc3, 0xf0, 0xcd, 0x93, 0x61, 0x03, 0x24, 0x5f, 0x1d, 0x70, 0xad, 0x07, 0x64, 0x80, 0x8d, 0x34,
	0x87, 0xbc, 0xad, 0xda, 0x34, 0x28, 0x1b, 0x5e, 0xae, 0x56, 0x0d, 0x58, 0xaa, 0xc7, 0x73, 0xbb,
	0xde, 0xf9, 0x65, 0x5c, 0x04, 0xf2, 0xb0, 0x19, 0xd8, 0x3f, 0xc8, 0x75, 0x26, 0xf9, 0x9e, 0x6b,
	0x76, 0x65, 0xe5, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8c, 0x37, 0xd7, 0xe5, 0xa5, 0x07, 0x00,
	0x00,
}
