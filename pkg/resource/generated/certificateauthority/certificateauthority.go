// Code generated by protoc-gen-gotemplate. DO NOT EDIT.

package certificateauthority // import "powerssl.io/pkg/resource/generated/certificateauthority"

import (
	"github.com/go-kit/kit/log"
	"github.com/go-kit/kit/metrics"
	"github.com/jinzhu/gorm"
	"google.golang.org/grpc"

	apiv1 "powerssl.io/pkg/apiserver/api/v1"
	resource "powerssl.io/pkg/resource"
	service "powerssl.io/pkg/resource/certificateauthority"
	"powerssl.io/pkg/resource/generated/certificateauthority/endpoint"
	"powerssl.io/pkg/resource/generated/certificateauthority/transport"
)

type CertificateAuthority struct {
	db        *gorm.DB
	endpoints endpoint.Endpoints
	logger    log.Logger
}

func New(db *gorm.DB, logger log.Logger, duration metrics.Histogram) resource.Resource {
	svc := service.New(db, logger)
	endpoints := endpoint.NewEndpoints(svc, logger, duration)

	return &CertificateAuthority{
		db:        db,
		endpoints: endpoints,
		logger:    logger,
	}
}

func (certificateAuthority *CertificateAuthority) RegisterGRPCServer(baseServer *grpc.Server) {
	grpcServer := transport.NewGRPCServer(certificateAuthority.endpoints, certificateAuthority.logger)
	apiv1.RegisterCertificateAuthorityServiceServer(baseServer, grpcServer)
}
