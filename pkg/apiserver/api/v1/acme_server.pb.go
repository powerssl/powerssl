// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: powerssl/apiserver/v1/acme_server.proto

package api // import "powerssl.io/pkg/apiserver/api/v1"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/googleapis/google/api"
import types "github.com/gogo/protobuf/types"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type ACMEServer struct {
	Name                 string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CreateTime           *types.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	UpdateTime           *types.Timestamp `protobuf:"bytes,3,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
	DisplayName          string           `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	DirectoryUrl         string           `protobuf:"bytes,8,opt,name=directory_url,json=directoryUrl,proto3" json:"directory_url,omitempty"`
	IntegrationName      string           `protobuf:"bytes,9,opt,name=integration_name,json=integrationName,proto3" json:"integration_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ACMEServer) Reset()         { *m = ACMEServer{} }
func (m *ACMEServer) String() string { return proto.CompactTextString(m) }
func (*ACMEServer) ProtoMessage()    {}
func (*ACMEServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_acme_server_5bd3250c16abad05, []int{0}
}
func (m *ACMEServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ACMEServer.Unmarshal(m, b)
}
func (m *ACMEServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ACMEServer.Marshal(b, m, deterministic)
}
func (dst *ACMEServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ACMEServer.Merge(dst, src)
}
func (m *ACMEServer) XXX_Size() int {
	return xxx_messageInfo_ACMEServer.Size(m)
}
func (m *ACMEServer) XXX_DiscardUnknown() {
	xxx_messageInfo_ACMEServer.DiscardUnknown(m)
}

var xxx_messageInfo_ACMEServer proto.InternalMessageInfo

func (m *ACMEServer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ACMEServer) GetCreateTime() *types.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *ACMEServer) GetUpdateTime() *types.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

func (m *ACMEServer) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *ACMEServer) GetDirectoryUrl() string {
	if m != nil {
		return m.DirectoryUrl
	}
	return ""
}

func (m *ACMEServer) GetIntegrationName() string {
	if m != nil {
		return m.IntegrationName
	}
	return ""
}

type CreateACMEServerRequest struct {
	AcmeServer           *ACMEServer `protobuf:"bytes,1,opt,name=acme_server,json=acmeServer" json:"acme_server,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateACMEServerRequest) Reset()         { *m = CreateACMEServerRequest{} }
func (m *CreateACMEServerRequest) String() string { return proto.CompactTextString(m) }
func (*CreateACMEServerRequest) ProtoMessage()    {}
func (*CreateACMEServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_acme_server_5bd3250c16abad05, []int{1}
}
func (m *CreateACMEServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateACMEServerRequest.Unmarshal(m, b)
}
func (m *CreateACMEServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateACMEServerRequest.Marshal(b, m, deterministic)
}
func (dst *CreateACMEServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateACMEServerRequest.Merge(dst, src)
}
func (m *CreateACMEServerRequest) XXX_Size() int {
	return xxx_messageInfo_CreateACMEServerRequest.Size(m)
}
func (m *CreateACMEServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateACMEServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateACMEServerRequest proto.InternalMessageInfo

func (m *CreateACMEServerRequest) GetAcmeServer() *ACMEServer {
	if m != nil {
		return m.AcmeServer
	}
	return nil
}

type DeleteACMEServerRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteACMEServerRequest) Reset()         { *m = DeleteACMEServerRequest{} }
func (m *DeleteACMEServerRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteACMEServerRequest) ProtoMessage()    {}
func (*DeleteACMEServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_acme_server_5bd3250c16abad05, []int{2}
}
func (m *DeleteACMEServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteACMEServerRequest.Unmarshal(m, b)
}
func (m *DeleteACMEServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteACMEServerRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteACMEServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteACMEServerRequest.Merge(dst, src)
}
func (m *DeleteACMEServerRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteACMEServerRequest.Size(m)
}
func (m *DeleteACMEServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteACMEServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteACMEServerRequest proto.InternalMessageInfo

func (m *DeleteACMEServerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetACMEServerRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetACMEServerRequest) Reset()         { *m = GetACMEServerRequest{} }
func (m *GetACMEServerRequest) String() string { return proto.CompactTextString(m) }
func (*GetACMEServerRequest) ProtoMessage()    {}
func (*GetACMEServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_acme_server_5bd3250c16abad05, []int{3}
}
func (m *GetACMEServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetACMEServerRequest.Unmarshal(m, b)
}
func (m *GetACMEServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetACMEServerRequest.Marshal(b, m, deterministic)
}
func (dst *GetACMEServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetACMEServerRequest.Merge(dst, src)
}
func (m *GetACMEServerRequest) XXX_Size() int {
	return xxx_messageInfo_GetACMEServerRequest.Size(m)
}
func (m *GetACMEServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetACMEServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetACMEServerRequest proto.InternalMessageInfo

func (m *GetACMEServerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListACMEServersRequest struct {
	PageSize             int32    `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListACMEServersRequest) Reset()         { *m = ListACMEServersRequest{} }
func (m *ListACMEServersRequest) String() string { return proto.CompactTextString(m) }
func (*ListACMEServersRequest) ProtoMessage()    {}
func (*ListACMEServersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_acme_server_5bd3250c16abad05, []int{4}
}
func (m *ListACMEServersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListACMEServersRequest.Unmarshal(m, b)
}
func (m *ListACMEServersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListACMEServersRequest.Marshal(b, m, deterministic)
}
func (dst *ListACMEServersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListACMEServersRequest.Merge(dst, src)
}
func (m *ListACMEServersRequest) XXX_Size() int {
	return xxx_messageInfo_ListACMEServersRequest.Size(m)
}
func (m *ListACMEServersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListACMEServersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListACMEServersRequest proto.InternalMessageInfo

func (m *ListACMEServersRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListACMEServersRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListACMEServersResponse struct {
	AcmeServers          []*ACMEServer `protobuf:"bytes,1,rep,name=acme_servers,json=acmeServers" json:"acme_servers,omitempty"`
	NextPageToken        string        `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListACMEServersResponse) Reset()         { *m = ListACMEServersResponse{} }
func (m *ListACMEServersResponse) String() string { return proto.CompactTextString(m) }
func (*ListACMEServersResponse) ProtoMessage()    {}
func (*ListACMEServersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_acme_server_5bd3250c16abad05, []int{5}
}
func (m *ListACMEServersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListACMEServersResponse.Unmarshal(m, b)
}
func (m *ListACMEServersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListACMEServersResponse.Marshal(b, m, deterministic)
}
func (dst *ListACMEServersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListACMEServersResponse.Merge(dst, src)
}
func (m *ListACMEServersResponse) XXX_Size() int {
	return xxx_messageInfo_ListACMEServersResponse.Size(m)
}
func (m *ListACMEServersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListACMEServersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListACMEServersResponse proto.InternalMessageInfo

func (m *ListACMEServersResponse) GetAcmeServers() []*ACMEServer {
	if m != nil {
		return m.AcmeServers
	}
	return nil
}

func (m *ListACMEServersResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type UpdateACMEServerRequest struct {
	Name                 string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UpdateMask           *types.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	AcmeServer           *ACMEServer      `protobuf:"bytes,3,opt,name=acme_server,json=acmeServer" json:"acme_server,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UpdateACMEServerRequest) Reset()         { *m = UpdateACMEServerRequest{} }
func (m *UpdateACMEServerRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateACMEServerRequest) ProtoMessage()    {}
func (*UpdateACMEServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_acme_server_5bd3250c16abad05, []int{6}
}
func (m *UpdateACMEServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateACMEServerRequest.Unmarshal(m, b)
}
func (m *UpdateACMEServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateACMEServerRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateACMEServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateACMEServerRequest.Merge(dst, src)
}
func (m *UpdateACMEServerRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateACMEServerRequest.Size(m)
}
func (m *UpdateACMEServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateACMEServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateACMEServerRequest proto.InternalMessageInfo

func (m *UpdateACMEServerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateACMEServerRequest) GetUpdateMask() *types.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

func (m *UpdateACMEServerRequest) GetAcmeServer() *ACMEServer {
	if m != nil {
		return m.AcmeServer
	}
	return nil
}

func init() {
	proto.RegisterType((*ACMEServer)(nil), "powerssl.apiserver.v1.ACMEServer")
	proto.RegisterType((*CreateACMEServerRequest)(nil), "powerssl.apiserver.v1.CreateACMEServerRequest")
	proto.RegisterType((*DeleteACMEServerRequest)(nil), "powerssl.apiserver.v1.DeleteACMEServerRequest")
	proto.RegisterType((*GetACMEServerRequest)(nil), "powerssl.apiserver.v1.GetACMEServerRequest")
	proto.RegisterType((*ListACMEServersRequest)(nil), "powerssl.apiserver.v1.ListACMEServersRequest")
	proto.RegisterType((*ListACMEServersResponse)(nil), "powerssl.apiserver.v1.ListACMEServersResponse")
	proto.RegisterType((*UpdateACMEServerRequest)(nil), "powerssl.apiserver.v1.UpdateACMEServerRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ACMEServerService service

type ACMEServerServiceClient interface {
	Create(ctx context.Context, in *CreateACMEServerRequest, opts ...grpc.CallOption) (*ACMEServer, error)
	Delete(ctx context.Context, in *DeleteACMEServerRequest, opts ...grpc.CallOption) (*types.Empty, error)
	Get(ctx context.Context, in *GetACMEServerRequest, opts ...grpc.CallOption) (*ACMEServer, error)
	List(ctx context.Context, in *ListACMEServersRequest, opts ...grpc.CallOption) (*ListACMEServersResponse, error)
	Update(ctx context.Context, in *UpdateACMEServerRequest, opts ...grpc.CallOption) (*ACMEServer, error)
}

type aCMEServerServiceClient struct {
	cc *grpc.ClientConn
}

func NewACMEServerServiceClient(cc *grpc.ClientConn) ACMEServerServiceClient {
	return &aCMEServerServiceClient{cc}
}

func (c *aCMEServerServiceClient) Create(ctx context.Context, in *CreateACMEServerRequest, opts ...grpc.CallOption) (*ACMEServer, error) {
	out := new(ACMEServer)
	err := c.cc.Invoke(ctx, "/powerssl.apiserver.v1.ACMEServerService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aCMEServerServiceClient) Delete(ctx context.Context, in *DeleteACMEServerRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/powerssl.apiserver.v1.ACMEServerService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aCMEServerServiceClient) Get(ctx context.Context, in *GetACMEServerRequest, opts ...grpc.CallOption) (*ACMEServer, error) {
	out := new(ACMEServer)
	err := c.cc.Invoke(ctx, "/powerssl.apiserver.v1.ACMEServerService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aCMEServerServiceClient) List(ctx context.Context, in *ListACMEServersRequest, opts ...grpc.CallOption) (*ListACMEServersResponse, error) {
	out := new(ListACMEServersResponse)
	err := c.cc.Invoke(ctx, "/powerssl.apiserver.v1.ACMEServerService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aCMEServerServiceClient) Update(ctx context.Context, in *UpdateACMEServerRequest, opts ...grpc.CallOption) (*ACMEServer, error) {
	out := new(ACMEServer)
	err := c.cc.Invoke(ctx, "/powerssl.apiserver.v1.ACMEServerService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ACMEServerService service

type ACMEServerServiceServer interface {
	Create(context.Context, *CreateACMEServerRequest) (*ACMEServer, error)
	Delete(context.Context, *DeleteACMEServerRequest) (*types.Empty, error)
	Get(context.Context, *GetACMEServerRequest) (*ACMEServer, error)
	List(context.Context, *ListACMEServersRequest) (*ListACMEServersResponse, error)
	Update(context.Context, *UpdateACMEServerRequest) (*ACMEServer, error)
}

func RegisterACMEServerServiceServer(s *grpc.Server, srv ACMEServerServiceServer) {
	s.RegisterService(&_ACMEServerService_serviceDesc, srv)
}

func _ACMEServerService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateACMEServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ACMEServerServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/powerssl.apiserver.v1.ACMEServerService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ACMEServerServiceServer).Create(ctx, req.(*CreateACMEServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ACMEServerService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteACMEServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ACMEServerServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/powerssl.apiserver.v1.ACMEServerService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ACMEServerServiceServer).Delete(ctx, req.(*DeleteACMEServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ACMEServerService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetACMEServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ACMEServerServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/powerssl.apiserver.v1.ACMEServerService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ACMEServerServiceServer).Get(ctx, req.(*GetACMEServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ACMEServerService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListACMEServersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ACMEServerServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/powerssl.apiserver.v1.ACMEServerService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ACMEServerServiceServer).List(ctx, req.(*ListACMEServersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ACMEServerService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateACMEServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ACMEServerServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/powerssl.apiserver.v1.ACMEServerService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ACMEServerServiceServer).Update(ctx, req.(*UpdateACMEServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ACMEServerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "powerssl.apiserver.v1.ACMEServerService",
	HandlerType: (*ACMEServerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ACMEServerService_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ACMEServerService_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ACMEServerService_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _ACMEServerService_List_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ACMEServerService_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "powerssl/apiserver/v1/acme_server.proto",
}

func init() {
	proto.RegisterFile("powerssl/apiserver/v1/acme_server.proto", fileDescriptor_acme_server_5bd3250c16abad05)
}

var fileDescriptor_acme_server_5bd3250c16abad05 = []byte{
	// 649 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xdf, 0x4e, 0xd4, 0x4e,
	0x14, 0x4e, 0x59, 0xd8, 0xb0, 0xa7, 0x10, 0x7e, 0x4c, 0x7e, 0xb2, 0x9b, 0x22, 0x71, 0x29, 0x06,
	0x11, 0xa5, 0x0d, 0x78, 0x27, 0xf1, 0x42, 0xfe, 0xc8, 0x8d, 0x18, 0xb3, 0xc0, 0x8d, 0x89, 0x69,
	0x86, 0xdd, 0xc3, 0x66, 0xb2, 0xfd, 0x67, 0x67, 0x76, 0x11, 0x8c, 0xc6, 0x78, 0x63, 0xbc, 0x30,
	0x5e, 0xf8, 0x1e, 0xbe, 0x8c, 0xaf, 0xe0, 0x83, 0x98, 0x99, 0x69, 0x97, 0x66, 0x77, 0x1b, 0x1a,
	0x6f, 0x9a, 0xe9, 0x99, 0xef, 0x9c, 0xf3, 0xcd, 0x77, 0xbe, 0x69, 0xe1, 0x41, 0x1c, 0x5d, 0x62,
	0xc2, 0xb9, 0xef, 0xd2, 0x98, 0x71, 0x4c, 0x06, 0x98, 0xb8, 0x83, 0x6d, 0x97, 0xb6, 0x03, 0xf4,
	0xf4, 0xab, 0x13, 0x27, 0x91, 0x88, 0xc8, 0x9d, 0x0c, 0xe8, 0x0c, 0x81, 0xce, 0x60, 0xdb, 0xba,
	0xdb, 0x8d, 0xa2, 0xae, 0x8f, 0x32, 0xdb, 0xa5, 0x61, 0x18, 0x09, 0x2a, 0x58, 0x14, 0x72, 0x9d,
	0x64, 0x2d, 0xa7, 0xbb, 0xea, 0xed, 0xbc, 0x7f, 0xe1, 0x62, 0x10, 0x8b, 0xab, 0x74, 0xb3, 0x39,
	0xba, 0x79, 0xc1, 0xd0, 0xef, 0x78, 0x01, 0xe5, 0xbd, 0x14, 0x71, 0x6f, 0x14, 0x21, 0x58, 0x80,
	0x5c, 0xd0, 0x20, 0xd6, 0x00, 0xfb, 0xfb, 0x14, 0xc0, 0xf3, 0xfd, 0xe3, 0xc3, 0x13, 0xc5, 0x87,
	0x10, 0x98, 0x0e, 0x69, 0x80, 0x0d, 0xa3, 0x69, 0x6c, 0xd4, 0x5a, 0x6a, 0x4d, 0x76, 0xc1, 0x6c,
	0x27, 0x48, 0x05, 0x7a, 0x32, 0xb9, 0x31, 0xd5, 0x34, 0x36, 0xcc, 0x1d, 0xcb, 0xd1, 0x95, 0x9d,
	0xac, 0xb2, 0x73, 0x9a, 0x55, 0x6e, 0x81, 0x86, 0xcb, 0x80, 0x4c, 0xee, 0xc7, 0x9d, 0x61, 0x72,
	0xe5, 0xf6, 0x64, 0x0d, 0x57, 0xc9, 0xab, 0x30, 0xd7, 0x61, 0x3c, 0xf6, 0xe9, 0x95, 0xa7, 0x58,
	0x4d, 0x2b, 0x56, 0x66, 0x1a, 0x7b, 0x25, 0xc9, 0xad, 0xc1, 0x7c, 0x87, 0x25, 0xd8, 0x16, 0x51,
	0x72, 0xe5, 0xf5, 0x13, 0xbf, 0x31, 0xab, 0x30, 0x73, 0xc3, 0xe0, 0x59, 0xe2, 0x93, 0x87, 0xf0,
	0x1f, 0x0b, 0x05, 0x76, 0x13, 0x25, 0xad, 0xae, 0x55, 0x53, 0xb8, 0x85, 0x5c, 0x5c, 0xd6, 0xb3,
	0xdf, 0x42, 0x7d, 0x5f, 0xb1, 0xbf, 0x11, 0xa5, 0x85, 0xef, 0xfa, 0xc8, 0x05, 0xd9, 0x03, 0x33,
	0x37, 0x54, 0x25, 0x91, 0xb9, 0xb3, 0xea, 0x4c, 0x9c, 0xaa, 0x93, 0x4b, 0x07, 0x99, 0xa5, 0xd7,
	0xf6, 0x16, 0xd4, 0x0f, 0xd0, 0xc7, 0x49, 0xe5, 0x27, 0x48, 0x6f, 0x6f, 0xc2, 0xff, 0x47, 0x28,
	0xca, 0x61, 0x4f, 0x61, 0xe9, 0x25, 0xe3, 0x39, 0x30, 0xcf, 0xd0, 0xcb, 0x50, 0x8b, 0x69, 0x17,
	0x3d, 0xce, 0xae, 0x75, 0xca, 0x4c, 0x6b, 0x56, 0x06, 0x4e, 0xd8, 0x35, 0x92, 0x15, 0x00, 0xb5,
	0x29, 0xa2, 0x1e, 0x86, 0x6a, 0xb8, 0xb5, 0x96, 0x82, 0x9f, 0xca, 0x80, 0xfd, 0xd5, 0x80, 0xfa,
	0x58, 0x59, 0x1e, 0x47, 0x21, 0x47, 0x72, 0x00, 0x73, 0x39, 0x41, 0x78, 0xc3, 0x68, 0x56, 0xca,
	0x29, 0x62, 0xde, 0x28, 0xc2, 0xc9, 0x3a, 0x2c, 0x84, 0xf8, 0x5e, 0x78, 0x63, 0x2c, 0xe6, 0x65,
	0xf8, 0xf5, 0x90, 0xc9, 0x2f, 0x03, 0xea, 0x67, 0xca, 0x1b, 0xa5, 0xf4, 0xc8, 0x39, 0x4f, 0xde,
	0x87, 0x42, 0xdb, 0xbe, 0x90, 0x57, 0xe6, 0x98, 0xf2, 0x5e, 0xe6, 0x3c, 0xb9, 0x1e, 0x9d, 0x75,
	0xe5, 0x1f, 0x66, 0xbd, 0xf3, 0x63, 0x06, 0x16, 0x6f, 0xb6, 0xe4, 0x93, 0xb5, 0x91, 0x7c, 0x36,
	0xa0, 0xaa, 0x1d, 0x46, 0x9c, 0x82, 0x7a, 0x05, 0x06, 0xb4, 0x6e, 0xef, 0x6f, 0xaf, 0x7d, 0xf9,
	0xfd, 0xe7, 0xe7, 0xd4, 0x8a, 0xbd, 0x90, 0x7d, 0x82, 0x52, 0x95, 0x9f, 0xe6, 0x88, 0x91, 0x04,
	0xaa, 0xda, 0x84, 0x85, 0x0c, 0x0a, 0x3c, 0x6a, 0x2d, 0x8d, 0xc9, 0x77, 0x28, 0x3f, 0x47, 0x76,
	0x53, 0xb5, 0xb5, 0x36, 0x1b, 0xb2, 0xed, 0x07, 0x29, 0xff, 0xb3, 0x5c, 0x73, 0x77, 0xf3, 0x23,
	0xb9, 0x84, 0xca, 0x11, 0x0a, 0xf2, 0xa8, 0xa0, 0xe1, 0x24, 0x97, 0x97, 0x39, 0x6f, 0xda, 0x98,
	0x14, 0x37, 0xfe, 0x04, 0xd3, 0xd2, 0xbf, 0x64, 0xab, 0xa0, 0xd8, 0xe4, 0x3b, 0x63, 0x39, 0x65,
	0xe1, 0xfa, 0x2e, 0xd8, 0x75, 0x45, 0x64, 0x91, 0x8c, 0x0a, 0x4f, 0xbe, 0x19, 0x50, 0xd5, 0xb6,
	0x2d, 0x54, 0xbb, 0xc0, 0xd5, 0x65, 0xce, 0xff, 0x58, 0xb5, 0x5d, 0xb7, 0x0a, 0xcf, 0x9f, 0x1f,
	0xfc, 0xde, 0xfa, 0x9b, 0xfb, 0xc3, 0x8a, 0x2c, 0x72, 0xe3, 0x5e, 0x37, 0xf7, 0xcf, 0x92, 0xff,
	0x9f, 0xc1, 0xf6, 0x2e, 0x8d, 0xd9, 0x79, 0x55, 0x8d, 0xf7, 0xc9, 0xdf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xe5, 0x18, 0xa0, 0x9a, 0xdb, 0x06, 0x00, 0x00,
}
