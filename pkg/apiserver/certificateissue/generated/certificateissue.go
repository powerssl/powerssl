// Code generated by protoc-gen-gotemplate. DO NOT EDIT.

package certificateissue // import "powerssl.io/pkg/apiserver/generated/certificateissue"

import (
	"github.com/go-kit/kit/log"
	"github.com/go-kit/kit/metrics"
	"github.com/jinzhu/gorm"
	"google.golang.org/grpc"

	apiv1 "powerssl.io/pkg/apiserver/api/v1"
	service "powerssl.io/pkg/apiserver/certificateissue"
	"powerssl.io/pkg/apiserver/certificateissue/generated/endpoint"
	"powerssl.io/pkg/apiserver/certificateissue/generated/transport"
	controllerclient "powerssl.io/pkg/controller/client"
)

type CertificateIssue struct {
	endpoints endpoint.Endpoints
	logger    log.Logger
}

func New(db *gorm.DB, logger log.Logger, duration metrics.Histogram, client *controllerclient.GRPCClient) *CertificateIssue {
	svc := service.New(db, logger, client)
	endpoints := endpoint.NewEndpoints(svc, logger, duration)

	return &CertificateIssue{
		endpoints: endpoints,
		logger:    logger,
	}
}

func (certificateIssue *CertificateIssue) RegisterGRPCServer(baseServer *grpc.Server) {
	grpcServer := transport.NewGRPCServer(certificateIssue.endpoints, certificateIssue.logger)
	apiv1.RegisterCertificateIssueServiceServer(baseServer, grpcServer)
}
